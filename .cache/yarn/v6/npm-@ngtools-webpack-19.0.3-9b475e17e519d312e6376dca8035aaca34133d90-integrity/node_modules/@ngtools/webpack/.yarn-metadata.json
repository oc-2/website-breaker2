{
  "manifest": {
    "name": "@ngtools/webpack",
    "version": "19.0.3",
    "description": "Webpack plugin that AoT compiles your Angular components and modules.",
    "main": "./src/index.js",
    "typings": "src/index.d.ts",
    "license": "MIT",
    "keywords": [
      "Angular CLI",
      "Angular DevKit",
      "angular",
      "aot",
      "devkit",
      "plugin",
      "sdk",
      "webpack"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/angular/angular-cli.git"
    },
    "author": {
      "name": "Angular Authors"
    },
    "bugs": {
      "url": "https://github.com/angular/angular-cli/issues"
    },
    "homepage": "https://github.com/angular/angular-cli",
    "peerDependencies": {
      "@angular/compiler-cli": "^19.0.0",
      "typescript": ">=5.5 <5.7",
      "webpack": "^5.54.0"
    },
    "packageManager": "yarn@4.5.0",
    "engines": {
      "node": "^18.19.1 || ^20.11.1 || >=22.0.0",
      "npm": "^6.11.0 || ^7.5.6 || >=8.0.0",
      "yarn": ">= 1.13.0"
    },
    "dependenciesMeta": {
      "esbuild": {
        "built": true
      },
      "puppeteer": {
        "built": true
      }
    },
    "_registry": "npm",
    "_loc": "/home/runner/website-breaker2/.cache/yarn/v6/npm-@ngtools-webpack-19.0.3-9b475e17e519d312e6376dca8035aaca34133d90-integrity/node_modules/@ngtools/webpack/package.json",
    "readmeFilename": "README.md",
    "readme": "# Angular Compiler Webpack Plugin\n\nWebpack 5.x plugin for the Angular Ahead-of-Time compiler. The plugin also supports Angular JIT mode.\nWhen this plugin is used outside of the Angular CLI, the Ivy linker will also be needed to support\nthe usage of Angular libraries. An example configuration of the Babel-based Ivy linker is provided\nin the linker section. For additional information regarding the linker, please see: https://angular.dev/tools/libraries/creating-libraries#consuming-partial-ivy-code-outside-the-angular-cli\n\n## Usage\n\nIn your webpack config, add the following plugin and loader.\n\n```typescript\nimport { AngularWebpackPlugin } from '@ngtools/webpack';\n\nexports = {\n  /* ... */\n  module: {\n    rules: [\n      /* ... */\n      {\n        test: /\\.[jt]sx?$/,\n        loader: '@ngtools/webpack',\n      },\n    ],\n  },\n\n  plugins: [\n    new AngularWebpackPlugin({\n      tsconfig: 'path/to/tsconfig.json',\n      // ... other options as needed\n    }),\n  ],\n};\n```\n\nThe loader works with webpack plugin to compile the application's TypeScript. It is important to include both, and to not include any other TypeScript loader.\n\n## Options\n\n- `tsconfig` [default: `tsconfig.json`] - The path to the application's TypeScript Configuration file. In the `tsconfig.json`, you can pass options to the Angular Compiler with `angularCompilerOptions`. Relative paths will be resolved from the Webpack compilation's context.\n- `compilerOptions` [default: none] - Overrides options in the application's TypeScript Configuration file (`tsconfig.json`).\n- `jitMode` [default: `false`] - Enables JIT compilation and do not refactor the code to bootstrap. This replaces `templateUrl: \"string\"` with `template: require(\"string\")` (and similar for styles) to allow for webpack to properly link the resources.\n- `directTemplateLoading` [default: `true`] - Causes the plugin to load component templates (HTML) directly from the filesystem. This is more efficient if only using the `raw-loader` to load component templates. Do not enable this option if additional loaders are configured for component templates.\n- `fileReplacements` [default: none] - Allows replacing TypeScript files with other TypeScript files in the build. This option acts on fully resolved file paths.\n- `inlineStyleFileExtension` [default: none] - When set inline component styles will be processed by Webpack as files with the provided extension.\n\n## Ivy Linker\n\nThe Ivy linker can be setup by using the Webpack `babel-loader` package.\nIf not already installed, add the `babel-loader` package using your project's package manager.\nThen in your webpack config, add the `babel-loader` with the following configuration.\nIf the `babel-loader` is already present in your configuration, the linker plugin can be added to\nthe existing loader configuration as well.\nEnabling caching for the `babel-loader` is recommended to avoid reprocessing libraries on\nevery build.\nFor additional information regarding the `babel-loader` package, please see: https://github.com/babel/babel-loader/tree/main#readme\n\n```typescript\nimport linkerPlugin from '@angular/compiler-cli/linker/babel';\n\nexports = {\n  /* ... */\n  module: {\n    rules: [\n      /* ... */\n      {\n        test: /\\.[cm]?js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            cacheDirectory: true,\n            compact: false,\n            plugins: [linkerPlugin],\n          },\n        },\n      },\n    ],\n  },\n};\n```\n",
    "licenseText": "The MIT License\n\nCopyright (c) 2010-2024 Google LLC. https://angular.dev/license\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@ngtools/webpack/-/webpack-19.0.3.tgz#9b475e17e519d312e6376dca8035aaca34133d90",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@ngtools/webpack/-/webpack-19.0.3.tgz",
    "hash": "9b475e17e519d312e6376dca8035aaca34133d90",
    "integrity": "sha512-z2xdbPKdYrKuypsIvCXEgPH1UWBV52JBKfShJB+zZerUWsAVJRqzsqVQKMhbyhbuqT/XJwP6EoVE6ADCGuTj/Q==",
    "registry": "npm",
    "packageName": "@ngtools/webpack",
    "cacheIntegrity": "sha512-z2xdbPKdYrKuypsIvCXEgPH1UWBV52JBKfShJB+zZerUWsAVJRqzsqVQKMhbyhbuqT/XJwP6EoVE6ADCGuTj/Q== sha1-m0deF+UZ0xLmN23KgDWqyjQTPZA="
  },
  "registry": "npm",
  "hash": "9b475e17e519d312e6376dca8035aaca34133d90"
}