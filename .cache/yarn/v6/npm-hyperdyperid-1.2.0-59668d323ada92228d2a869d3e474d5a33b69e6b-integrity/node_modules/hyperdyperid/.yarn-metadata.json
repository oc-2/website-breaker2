{
  "manifest": {
    "name": "hyperdyperid",
    "version": "1.2.0",
    "description": "Fastest random ID and random string generation for Node.js",
    "author": {
      "name": "streamich",
      "url": "https://github.com/streamich"
    },
    "homepage": "https://github.com/streamich/hyperdyperid",
    "repository": {
      "type": "git",
      "url": "https://github.com/streamich/hyperdyperid.git"
    },
    "license": "MIT",
    "engines": {
      "node": ">=10.18"
    },
    "main": "lib/index.js",
    "files": [
      "lib/"
    ],
    "types": "lib/index.d.ts",
    "typings": "lib/index.d.ts",
    "scripts": {
      "test": "jest --config='jest.config.js'",
      "release": "semantic-release"
    },
    "keywords": [],
    "dependencies": {},
    "devDependencies": {
      "@semantic-release/changelog": "^5.0.1",
      "@semantic-release/git": "^9.0.0",
      "@semantic-release/npm": "^7.0.6",
      "@types/jest": "^26.0.14",
      "benchmark": "^2.1.4",
      "hyperid": "2.0.5",
      "jest": "^26.4.2",
      "semantic-release": "^17.1.2",
      "nanoid": "^3.1.12",
      "shortid": "^2.2.15"
    },
    "release": {
      "verifyConditions": [
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/git"
      ],
      "prepare": [
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/git"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/runner/website-breaker2/.cache/yarn/v6/npm-hyperdyperid-1.2.0-59668d323ada92228d2a869d3e474d5a33b69e6b-integrity/node_modules/hyperdyperid/package.json",
    "readmeFilename": "README.md",
    "readme": "# `hyperdyperid`\n\nFastest random ID and random string generation for Node.js\n\n- `str3_36` &mdash; generates random 3 character Base36 alphanumeric string.\n- `str5_36` &mdash; generates random 5 character Base36 alphanumeric string.\n- `str6_36` &mdash; generates random 6 character Base36 alphanumeric string.\n- `str10_36` &mdash; generates random 10 character alphanumeric string.\n- `str(len [, alphabet])` &mdash; generates any length random string using an `alphabet`. Use like `str(10, '0123456789')`.\n- `hyperid` &mdash; generates \"hyperid\" like ID.\n- `xorshift32` &mdash; iterates through pseudo random numbers using \"xorshift32\" algorithm. This used\n  to be the algorithm behind `Math.random()` in V8, then it switched to \"xorshift64\".\n- `randomU32(min, max)` &mdash; generate a random 32-bit integer.\n\n\n## Usage\n\nInstall\n\n```\nyarn add hyperdyperid\n```\n\nGenerate base36 10-character string:\n\n```js\nconst {str10_36} = require('hyperdyperid/lib/str10_36');\n\nstr10_36();\n// lxifpmidcr\n// cn41vpmtxo\n// dj2u5ghp3r\n// 6yro5d0g9l\n```\n\n\n## Performance\n\nRan on Mac Mini M1.\n\nRandom ID generation:\n\n```\nnode -v\nv16.14.2\nnode benchmarks/main.js \nhyperdyperid xorshift32() x 241,258,490 ops/sec ±1.97% (78 runs sampled)\nhyperdyperid str3_36() x 203,361,942 ops/sec ±1.57% (82 runs sampled)\nhyperdyperid str5_36() x 124,134,559 ops/sec ±1.74% (85 runs sampled)\nhyperdyperid str6_36() x 125,011,053 ops/sec ±2.48% (70 runs sampled)\nhyperdyperid str10_36() x 19,445,199 ops/sec ±1.92% (84 runs sampled)\nhyperdyperid str(5) x 5,940,801 ops/sec ±1.70% (82 runs sampled)\nhyperdyperid str(10) x 2,798,758 ops/sec ±1.45% (65 runs sampled)\nhyperdyperid hyperid() x 26,317,209 ops/sec ±2.61% (76 runs sampled)\nhyperid x 17,018,022 ops/sec ±1.66% (84 runs sampled)\nMath.random() x 72,294,752 ops/sec ±1.65% (83 runs sampled)\nMath.random().toString() x 4,503,932 ops/sec ±2.68% (80 runs sampled)\nnanoid x 470,470 ops/sec ±3.17% (77 runs sampled)\nshortid x 41,870 ops/sec ±6.21% (67 runs sampled)\nFastest is hyperdyperid xorshift32()\n```\n\nRandom integer generation:\n\n```\nnode -v\nv16.14.2\nnode benchmarks/randomU32.js \nrandomU32(min, max) x 248,233,310 ops/sec ±1.91% (73 runs sampled)\nMath.random() * (max - min + 1) + min x 35,034,863 ops/sec ±1.75% (81 runs sampled)\nFastest is randomU32(min, max)\n```\n\n\n## License\n\n[MIT © Vadim Dalecky](LICENSE).\n",
    "licenseText": "MIT License\n\nCopyright (c) 2020 Vadim @streamich Dalecky\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hyperdyperid/-/hyperdyperid-1.2.0.tgz#59668d323ada92228d2a869d3e474d5a33b69e6b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hyperdyperid/-/hyperdyperid-1.2.0.tgz",
    "hash": "59668d323ada92228d2a869d3e474d5a33b69e6b",
    "integrity": "sha512-Y93lCzHYgGWdrJ66yIktxiaGULYc6oGiABxhcO5AufBeOyoIdZF7bIfLaOrbM0iGIOXQQgxxRrFEnb+Y6w1n4A==",
    "registry": "npm",
    "packageName": "hyperdyperid",
    "cacheIntegrity": "sha512-Y93lCzHYgGWdrJ66yIktxiaGULYc6oGiABxhcO5AufBeOyoIdZF7bIfLaOrbM0iGIOXQQgxxRrFEnb+Y6w1n4A== sha1-WWaNMjrakiKNKoadPkdNWjO2nms="
  },
  "registry": "npm",
  "hash": "59668d323ada92228d2a869d3e474d5a33b69e6b"
}