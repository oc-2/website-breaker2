{
  "manifest": {
    "name": "psl",
    "version": "1.13.0",
    "description": "Domain name parser based on the Public Suffix List",
    "repository": {
      "type": "git",
      "url": "git@github.com:lupomontero/psl.git"
    },
    "type": "module",
    "main": "./dist/psl.cjs",
    "exports": {
      ".": {
        "import": "./dist/psl.mjs",
        "require": "./dist/psl.cjs"
      }
    },
    "types": "types/index.d.ts",
    "scripts": {
      "lint": "eslint .",
      "test": "mocha test/*.spec.js",
      "test:browserstack": "browserstack-node-sdk playwright test",
      "watch": "mocha test/*.spec.js --watch",
      "update-rules": "./scripts/update-rules.js",
      "build": "vite build",
      "postbuild": "ln -s ./psl.umd.cjs dist/psl.js && ln -s ./psl.umd.cjs dist/psl.min.js",
      "changelog": "git log $(git describe --tags --abbrev=0)..HEAD --oneline --format=\"%h %s (%an <%ae>)\""
    },
    "keywords": [
      "publicsuffix",
      "publicsuffixlist"
    ],
    "author": {
      "name": "Lupo Montero",
      "email": "lupomontero@gmail.com",
      "url": "https://lupomontero.com/"
    },
    "license": "MIT",
    "dependencies": {
      "punycode": "^2.3.1"
    },
    "devDependencies": {
      "@eslint/js": "^9.15.0",
      "@playwright/test": "^1.49.0",
      "@types/eslint__js": "^8.42.3",
      "browserstack-node-sdk": "^1.34.23",
      "eslint": "^9.15.0",
      "mocha": "^10.8.2",
      "typescript": "^5.6.3",
      "typescript-eslint": "^8.15.0",
      "vite": "^5.4.11"
    },
    "_registry": "npm",
    "_loc": "/home/runner/website-breaker2/.cache/yarn/v6/npm-psl-1.13.0-8b2357f13ef3cf546af3f52de00543a94da86cfa-integrity/node_modules/psl/package.json",
    "readmeFilename": "README.md",
    "readme": "# psl (Public Suffix List)\n\n[![Node.js CI](https://github.com/lupomontero/psl/actions/workflows/node.js.yml/badge.svg)](https://github.com/lupomontero/psl/actions/workflows/node.js.yml)\n\n`psl` is a `JavaScript` domain name parser based on the\n[Public Suffix List](https://publicsuffix.org/).\n\nThis implementation is tested against the\n[test data hosted by Mozilla](http://mxr.mozilla.org/mozilla-central/source/netwerk/test/unit/data/test_psl.txt?raw=1)\nand kindly provided by [Comodo](https://www.comodo.com/).\n\nCross browser testing provided by\n[<img alt=\"BrowserStack\" width=\"160\" src=\"./browserstack-logo.svg\" />](https://www.browserstack.com/)\n\n## What is the Public Suffix List?\n\nThe Public Suffix List is a cross-vendor initiative to provide an accurate list\nof domain name suffixes.\n\nThe Public Suffix List is an initiative of the Mozilla Project, but is\nmaintained as a community resource. It is available for use in any software,\nbut was originally created to meet the needs of browser manufacturers.\n\nA \"public suffix\" is one under which Internet users can directly register names.\nSome examples of public suffixes are \".com\", \".co.uk\" and \"pvt.k12.wy.us\". The\nPublic Suffix List is a list of all known public suffixes.\n\nSource: http://publicsuffix.org\n\n\n## Installation\n\nThis module is available both for Node.js and the browser. See below for more\ndetails.\n\n### Node.js\n\n```sh\nnpm install psl\n```\n\n#### ESM\n\nFrom version `v1.11.0` you can now import `psl` as ESM.\n\n```js\nimport psl from 'psl';\n```\n\n#### CommonJS\n\nIf your project still uses CommonJS on Node.js v12 or later (with support for\nconditional exports), you can continue importing the module like in previous\nversions.\n\n```js\nconst psl = require('psl');\n```\n\n‚ö†Ô∏è If you are using Node.js v10 or older (üò∞), you can still use the latest\nversion of this module, but you will need to import the bundled UMD.\n\n```js\nvar psl = require('psl/dist/psl.umd.cjs');\n```\n\n### Browser\n\n#### Using a bundler\n\nIf you are using a bundler to build your app, you should be able to `import`\nand/or `require` the module just like in Node.js.\n\n#### ESM (using a CDN)\n\nIn modern browsers you can also import the ESM directly from a `CDN`. For\nexample:\n\n```js\nimport psl from 'https://unpkg.com/psl@latest/dist/psl.mjs';\n```\n\n#### UMD / CommonJS\n\nFinally, you can still download [`dist/psl.umd.cjs`](https://raw.githubusercontent.com/lupomontero/psl/main/dist/psl.umd.cjs)\nand include it in a script tag.\n\n```html\n<script src=\"psl.umd.cjs\"></script>\n```\n\nThis script is bundled and wrapped in a [umd](https://github.com/umdjs/umd)\nwrapper so you should be able to use it standalone or together with a module\nloader.\n\nThe script is also available on most popular CDNs. For example:\n\n* https://cdnjs.cloudflare.com/ajax/libs/psl/latest/psl.min.js\n* https://unpkg.com/psl@latest/dist/psl.min.js\n\n## API\n\n### `psl.parse(domain)`\n\nParse domain based on Public Suffix List. Returns an `Object` with the following\nproperties:\n\n* `tld`: Top level domain (this is the _public suffix_).\n* `sld`: Second level domain (the first private part of the domain name).\n* `domain`: The domain name is the `sld` + `tld`.\n* `subdomain`: Optional parts left of the domain.\n\n#### Examples\n\nParse domain without subdomain:\n\n```js\nimport psl from 'psl';\n\nconst parsed = psl.parse('google.com');\nconsole.log(parsed.tld); // 'com'\nconsole.log(parsed.sld); // 'google'\nconsole.log(parsed.domain); // 'google.com'\nconsole.log(parsed.subdomain); // null\n```\n\nParse domain with subdomain:\n\n```js\nimport psl from 'psl';\n\nconst parsed = psl.parse('www.google.com');\nconsole.log(parsed.tld); // 'com'\nconsole.log(parsed.sld); // 'google'\nconsole.log(parsed.domain); // 'google.com'\nconsole.log(parsed.subdomain); // 'www'\n```\n\nParse domain with nested subdomains:\n\n```js\nimport psl from 'psl';\n\nconst parsed = psl.parse('a.b.c.d.foo.com');\nconsole.log(parsed.tld); // 'com'\nconsole.log(parsed.sld); // 'foo'\nconsole.log(parsed.domain); // 'foo.com'\nconsole.log(parsed.subdomain); // 'a.b.c.d'\n```\n\n### `psl.get(domain)`\n\nGet domain name, `sld` + `tld`. Returns `null` if not valid.\n\n#### Examples\n\n```js\nimport psl from 'psl';\n\n// null input.\npsl.get(null); // null\n\n// Mixed case.\npsl.get('COM'); // null\npsl.get('example.COM'); // 'example.com'\npsl.get('WwW.example.COM'); // 'example.com'\n\n// Unlisted TLD.\npsl.get('example'); // null\npsl.get('example.example'); // 'example.example'\npsl.get('b.example.example'); // 'example.example'\npsl.get('a.b.example.example'); // 'example.example'\n\n// TLD with only 1 rule.\npsl.get('biz'); // null\npsl.get('domain.biz'); // 'domain.biz'\npsl.get('b.domain.biz'); // 'domain.biz'\npsl.get('a.b.domain.biz'); // 'domain.biz'\n\n// TLD with some 2-level rules.\npsl.get('uk.com'); // null);\npsl.get('example.uk.com'); // 'example.uk.com');\npsl.get('b.example.uk.com'); // 'example.uk.com');\n\n// More complex TLD.\npsl.get('c.kobe.jp'); // null\npsl.get('b.c.kobe.jp'); // 'b.c.kobe.jp'\npsl.get('a.b.c.kobe.jp'); // 'b.c.kobe.jp'\npsl.get('city.kobe.jp'); // 'city.kobe.jp'\npsl.get('www.city.kobe.jp'); // 'city.kobe.jp'\n\n// IDN labels.\npsl.get('È£üÁãÆ.com.cn'); // 'È£üÁãÆ.com.cn'\npsl.get('È£üÁãÆ.ÂÖ¨Âè∏.cn'); // 'È£üÁãÆ.ÂÖ¨Âè∏.cn'\npsl.get('www.È£üÁãÆ.ÂÖ¨Âè∏.cn'); // 'È£üÁãÆ.ÂÖ¨Âè∏.cn'\n\n// Same as above, but punycoded.\npsl.get('xn--85x722f.com.cn'); // 'xn--85x722f.com.cn'\npsl.get('xn--85x722f.xn--55qx5d.cn'); // 'xn--85x722f.xn--55qx5d.cn'\npsl.get('www.xn--85x722f.xn--55qx5d.cn'); // 'xn--85x722f.xn--55qx5d.cn'\n```\n\n### `psl.isValid(domain)`\n\nCheck whether a domain has a valid Public Suffix. Returns a `Boolean` indicating\nwhether the domain has a valid Public Suffix.\n\n#### Example\n\n```js\nimport psl from 'psl';\n\npsl.isValid('google.com'); // true\npsl.isValid('www.google.com'); // true\npsl.isValid('x.yz'); // false\n```\n\n## Testing and Building\n\nThere are tests both for Node.js and the browser (using [Playwright](https://playwright.dev)\nand [BrowserStack](https://www.browserstack.com/)).\n\n```sh\n# Run tests in node.\nnpm test\n# Run tests in browserstack.\nnpm run test:browserstack\n\n# Update rules from publicsuffix.org\nnpm run update-rules\n\n# Build ESM, CJS and UMD and create dist files\nnpm run build\n```\n\nFeel free to fork if you see possible improvements!\n\n## Acknowledgements\n\n* Mozilla Foundation's [Public Suffix List](https://publicsuffix.org/)\n* Thanks to Rob Stradling of [Comodo](https://www.comodo.com/) for providing\n  test data.\n* Inspired by [weppos/publicsuffix-ruby](https://github.com/weppos/publicsuffix-ruby)\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2014-2024 Lupo Montero <lupomontero@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2017 Lupo Montero lupomontero@gmail.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/psl/-/psl-1.13.0.tgz#8b2357f13ef3cf546af3f52de00543a94da86cfa",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/psl/-/psl-1.13.0.tgz",
    "hash": "8b2357f13ef3cf546af3f52de00543a94da86cfa",
    "integrity": "sha512-BFwmFXiJoFqlUpZ5Qssolv15DMyc84gTBds1BjsV1BfXEo1UyyD7GsmN67n7J77uRhoSNW1AXtXKPLcBFQn9Aw==",
    "registry": "npm",
    "packageName": "psl",
    "cacheIntegrity": "sha512-BFwmFXiJoFqlUpZ5Qssolv15DMyc84gTBds1BjsV1BfXEo1UyyD7GsmN67n7J77uRhoSNW1AXtXKPLcBFQn9Aw== sha1-iyNX8T7zz1Rq8/Ut4AVDqU2obPo="
  },
  "registry": "npm",
  "hash": "8b2357f13ef3cf546af3f52de00543a94da86cfa"
}