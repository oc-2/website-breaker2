{
  "manifest": {
    "name": "@socket.io/component-emitter",
    "description": "Event emitter",
    "version": "3.1.2",
    "license": "MIT",
    "devDependencies": {
      "mocha": "*",
      "should": "*"
    },
    "component": {
      "scripts": {
        "emitter/index.js": "index.js"
      }
    },
    "main": "./lib/cjs/index.js",
    "module": "./lib/esm/index.js",
    "types": "./lib/cjs/index.d.ts",
    "repository": {
      "type": "git",
      "url": "https://github.com/socketio/emitter.git"
    },
    "scripts": {
      "test": "make test"
    },
    "files": [
      "lib/"
    ],
    "_registry": "npm",
    "_loc": "/home/runner/website-breaker2/.cache/yarn/v6/npm-@socket-io-component-emitter-3.1.2-821f8442f4175d8f0467b9daf26e3a18e2d02af2-integrity/node_modules/@socket.io/component-emitter/package.json",
    "readmeFilename": "Readme.md",
    "readme": "# `@socket.io/component-emitter`\n\n  Event emitter component.\n\nThis project is a fork of the [`component-emitter`](https://github.com/sindresorhus/component-emitter) project, with [Socket.IO](https://socket.io/)-specific TypeScript typings.\n\n## Installation\n\n```\n$ npm i @socket.io/component-emitter\n```\n\n## API\n\n### Emitter(obj)\n\n  The `Emitter` may also be used as a mixin. For example\n  a \"plain\" object may become an emitter, or you may\n  extend an existing prototype.\n\n  As an `Emitter` instance:\n\n```js\nimport { Emitter } from '@socket.io/component-emitter';\n\nvar emitter = new Emitter;\nemitter.emit('something');\n```\n\n  As a mixin:\n\n```js\nimport { Emitter } from '@socket.io/component-emitter';\n\nvar user = { name: 'tobi' };\nEmitter(user);\n\nuser.emit('im a user');\n```\n\n  As a prototype mixin:\n\n```js\nimport { Emitter } from '@socket.io/component-emitter';\n\nEmitter(User.prototype);\n```\n\n### Emitter#on(event, fn)\n\n  Register an `event` handler `fn`.\n\n### Emitter#once(event, fn)\n\n  Register a single-shot `event` handler `fn`,\n  removed immediately after it is invoked the\n  first time.\n\n### Emitter#off(event, fn)\n\n  * Pass `event` and `fn` to remove a listener.\n  * Pass `event` to remove all listeners on that event.\n  * Pass nothing to remove all listeners on all events.\n\n### Emitter#emit(event, ...)\n\n  Emit an `event` with variable option args.\n\n### Emitter#listeners(event)\n\n  Return an array of callbacks, or an empty array.\n\n### Emitter#hasListeners(event)\n\n  Check if this emitter has `event` handlers.\n\n## License\n\nMIT\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2014 Component contributors <dev@component.io>\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@socket.io/component-emitter/-/component-emitter-3.1.2.tgz#821f8442f4175d8f0467b9daf26e3a18e2d02af2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@socket.io/component-emitter/-/component-emitter-3.1.2.tgz",
    "hash": "821f8442f4175d8f0467b9daf26e3a18e2d02af2",
    "integrity": "sha512-9BCxFwvbGg/RsZK9tjXd8s4UcwR0MWeFQ1XEKIQVVvAGJyINdrqKMcTRyLoK8Rse1GjzLV9cwjWV1olXRWEXVA==",
    "registry": "npm",
    "packageName": "@socket.io/component-emitter",
    "cacheIntegrity": "sha512-9BCxFwvbGg/RsZK9tjXd8s4UcwR0MWeFQ1XEKIQVVvAGJyINdrqKMcTRyLoK8Rse1GjzLV9cwjWV1olXRWEXVA== sha1-gh+EQvQXXY8EZ7na8m46GOLQKvI="
  },
  "registry": "npm",
  "hash": "821f8442f4175d8f0467b9daf26e3a18e2d02af2"
}