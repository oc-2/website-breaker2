{
  "manifest": {
    "name": "@inquirer/editor",
    "version": "4.1.0",
    "description": "Inquirer multiline editor prompt",
    "keywords": [
      "answer",
      "answers",
      "ask",
      "base",
      "cli",
      "command",
      "command-line",
      "confirm",
      "enquirer",
      "generate",
      "generator",
      "hyper",
      "input",
      "inquire",
      "inquirer",
      "interface",
      "iterm",
      "javascript",
      "menu",
      "node",
      "nodejs",
      "prompt",
      "promptly",
      "prompts",
      "question",
      "readline",
      "scaffold",
      "scaffolder",
      "scaffolding",
      "stdin",
      "stdout",
      "terminal",
      "tty",
      "ui",
      "yeoman",
      "yo",
      "zsh"
    ],
    "homepage": "https://github.com/SBoudrias/Inquirer.js/blob/main/packages/editor/README.md",
    "repository": {
      "type": "git",
      "url": "https://github.com/SBoudrias/Inquirer.js.git"
    },
    "license": "MIT",
    "author": {
      "name": "Simon Boudrias",
      "email": "admin@simonboudrias.com"
    },
    "sideEffects": false,
    "type": "module",
    "exports": {
      "./package.json": "./package.json",
      ".": {
        "import": {
          "types": "./dist/esm/index.d.ts",
          "default": "./dist/esm/index.js"
        },
        "require": {
          "types": "./dist/commonjs/index.d.ts",
          "default": "./dist/commonjs/index.js"
        }
      }
    },
    "main": "./dist/commonjs/index.js",
    "module": "./dist/esm/index.js",
    "types": "./dist/commonjs/index.d.ts",
    "files": [
      "dist"
    ],
    "scripts": {
      "attw": "attw --pack",
      "tsc": "tshy"
    },
    "dependencies": {
      "@inquirer/core": "^10.1.0",
      "@inquirer/type": "^3.0.1",
      "external-editor": "^3.1.0"
    },
    "devDependencies": {
      "@arethetypeswrong/cli": "^0.17.0",
      "@inquirer/testing": "^2.1.37",
      "@repo/tsconfig": "workspace:*",
      "tshy": "^3.0.2"
    },
    "engines": {
      "node": ">=18"
    },
    "publishConfig": {
      "access": "public"
    },
    "tshy": {
      "exclude": [
        "src/**/*.test.ts"
      ],
      "exports": {
        "./package.json": "./package.json",
        ".": "./src/index.ts"
      }
    },
    "peerDependencies": {
      "@types/node": ">=18"
    },
    "gitHead": "84e49bdb552e1cb4f035d644190913f367a66e74",
    "_registry": "npm",
    "_loc": "/home/runner/website-breaker2/.cache/yarn/v6/npm-@inquirer-editor-4.1.0-bc1a8bebe5897d4b44b0bfab1aeb1b5172f8d812-integrity/node_modules/@inquirer/editor/package.json",
    "readmeFilename": "README.md",
    "readme": "# `@inquirer/editor`\n\nPrompt that'll open the user preferred editor with default content and allow for a convenient multi-line input controlled through the command line.\n\n# Installation\n\n<table>\n<tr>\n  <th>npm</th>\n  <th>yarn</th>\n</tr>\n<tr>\n<td>\n\n```sh\nnpm install @inquirer/prompts\n```\n\n</td>\n<td>\n\n```sh\nyarn add @inquirer/prompts\n```\n\n</td>\n</tr>\n<tr>\n<td colSpan=\"2\" align=\"center\">Or</td>\n</tr>\n<tr>\n<td>\n\n```sh\nnpm install @inquirer/editor\n```\n\n</td>\n<td>\n\n```sh\nyarn add @inquirer/editor\n```\n\n</td>\n</tr>\n</table>\n\n# Usage\n\n```js\nimport { editor } from '@inquirer/prompts';\n// Or\n// import editor from '@inquirer/editor';\n\nconst answer = await editor({\n  message: 'Enter a description',\n});\n```\n\n## Options\n\n| Property        | Type                                                                           | Required               | Description                                                                                                                                                                                                                            |\n| --------------- | ------------------------------------------------------------------------------ | ---------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| message         | `string`                                                                       | yes                    | The question to ask                                                                                                                                                                                                                    |\n| default         | `string`                                                                       | no                     | Default value which will automatically be present in the editor                                                                                                                                                                        |\n| validate        | `string => boolean \\| string \\| Promise<boolean \\| string>`                    | no                     | On submit, validate the content. When returning a string, it'll be used as the error message displayed to the user. Note: returning a rejected promise, we'll assume a code error happened and crash.                                  |\n| postfix         | `string`                                                                       | no (default to `.txt`) | The postfix of the file being edited. Adding this will add color highlighting to the file content in most editors.                                                                                                                     |\n| file            | [`IFileOptions`](https://github.com/mrkmg/node-external-editor#config-options) | no                     | Exposes the [`external-editor` package options](https://github.com/mrkmg/node-external-editor#config-options) to configure the temporary file.                                                                                         |\n| waitForUseInput | `boolean`                                                                      | no (default to `true`) | Open the editor automatically without waiting for the user to press enter. Note that this mean the user will not see the question! So make sure you have a default value that provide guidance if it's unclear what input is expected. |\n| theme           | [See Theming](#Theming)                                                        | no                     | Customize look of the prompt.                                                                                                                                                                                                          |\n\n## Theming\n\nYou can theme a prompt by passing a `theme` object option. The theme object only need to includes the keys you wish to modify, we'll fallback on the defaults for the rest.\n\n```ts\ntype Theme = {\n  prefix: string | { idle: string; done: string };\n  spinner: {\n    interval: number;\n    frames: string[];\n  };\n  style: {\n    message: (text: string, status: 'idle' | 'done' | 'loading') => string;\n    error: (text: string) => string;\n    help: (text: string) => string;\n    key: (text: string) => string;\n  };\n};\n```\n\n# License\n\nCopyright (c) 2023 Simon Boudrias (twitter: [@vaxilart](https://twitter.com/Vaxilart))<br/>\nLicensed under the MIT license.\n",
    "licenseText": "Copyright (c) 2023 Simon Boudrias\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@inquirer/editor/-/editor-4.1.0.tgz#bc1a8bebe5897d4b44b0bfab1aeb1b5172f8d812",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@inquirer/editor/-/editor-4.1.0.tgz",
    "hash": "bc1a8bebe5897d4b44b0bfab1aeb1b5172f8d812",
    "integrity": "sha512-K1gGWsxEqO23tVdp5MT3H799OZ4ER1za7Dlc8F4um0W7lwSv0KGR/YyrUEyimj0g7dXZd8XknM/5QA2/Uy+TbA==",
    "registry": "npm",
    "packageName": "@inquirer/editor",
    "cacheIntegrity": "sha512-K1gGWsxEqO23tVdp5MT3H799OZ4ER1za7Dlc8F4um0W7lwSv0KGR/YyrUEyimj0g7dXZd8XknM/5QA2/Uy+TbA== sha1-vBqL6+WJfUtEsL+rGusbUXL42BI="
  },
  "registry": "npm",
  "hash": "bc1a8bebe5897d4b44b0bfab1aeb1b5172f8d812"
}