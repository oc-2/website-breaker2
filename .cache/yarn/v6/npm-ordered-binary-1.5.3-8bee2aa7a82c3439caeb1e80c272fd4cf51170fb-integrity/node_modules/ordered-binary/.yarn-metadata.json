{
  "manifest": {
    "name": "ordered-binary",
    "author": {
      "name": "Kris Zyp"
    },
    "version": "1.5.3",
    "description": "Conversion of JavaScript primitives to and from Buffer with binary order matching natural primitive order",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "http://github.com/kriszyp/ordered-binary"
    },
    "scripts": {
      "build": "rollup -c",
      "prepare": "rollup -c",
      "test": "mocha tests -u tdd"
    },
    "type": "module",
    "main": "dist/index.cjs",
    "module": "index.js",
    "exports": {
      ".": {
        "require": "./dist/index.cjs",
        "import": "./index.js"
      },
      "./index.js": {
        "require": "./dist/index.cjs",
        "import": "./index.js"
      }
    },
    "typings": "./index.d.ts",
    "optionalDependencies": {},
    "devDependencies": {
      "@types/node": "latest",
      "chai": "^4",
      "mocha": "^9.2.0",
      "rollup": "^2.61.1"
    },
    "_registry": "npm",
    "_loc": "/home/runner/website-breaker2/.cache/yarn/v6/npm-ordered-binary-1.5.3-8bee2aa7a82c3439caeb1e80c272fd4cf51170fb-integrity/node_modules/ordered-binary/package.json",
    "readmeFilename": "README.md",
    "readme": "[![npm version](https://img.shields.io/npm/dw/ordered-binary)](https://www.npmjs.org/package/ordered-binary)\n[![npm version](https://img.shields.io/npm/v/ordered-binary.svg?style=flat-square)](https://www.npmjs.org/package/ordered-binary)\n[![license](https://img.shields.io/badge/license-MIT-brightgreen)](LICENSE)\n\nThe ordered-binary package provides a representation of JavaScript primitives, serialized into binary format (NodeJS Buffers or Uint8Arrays), such that the binary values are naturally ordered such that it matches the natural ordering or values. For example, since -2.0321 > -2.04, then `toBufferKey(-2.0321)` will be greater than `toBufferKey(-2.04)` as a binary representation, in left-to-right evaluation. This is particular useful for storing keys as binaries with something like LMDB or LevelDB, to avoid any custom sorting.\n\nThe ordered-binary package supports strings, numbers, booleans, symbols, null, as well as an array of primitives. Here is an example of ordering of primitive values:\n```\nBuffer.from([0]) // buffers are left unchanged, and this is the minimum value\nSymbol.for('even symbols')\n-10 // negative supported\n-1.1 // decimals supported\n400\n3E10\n'Hello'\n['Hello', 'World']\n'World'\n'hello'\n['hello', 1, 'world']\n['hello', 'world']\nBuffer.from([0xff])\n```\n\n\nThe main module exports these functions:\n\n`writeKey(key: string | number | boolean | null | Array, target: Buffer, position: integer, inSequence?: boolean)` - Writes the provide key to the target buffer\n\n`readKey(buffer, start, end, inSequence)` - Reads the key from the buffer, given the provided start and end, as a primitive value\n\n`toBufferKey(jsPrimitive)` - This accepts a string, number, or boolean as the argument, and returns a `Buffer`.\n\n`fromBufferKey(bufferKey, multiple)` - This accepts a Buffer and returns a JavaScript primitive value. This can also parse buffers that hold multiple values delimited by a byte `30`, by setting the second argument to true (in which case it will return an array).\n\nAnd these constants:\n\n`MINIMUM_KEY` - The minimum key supported (`null`, which is represented as single zero byte)\n`MAXIMUM_KEY` - A maximum key larger than any supported primitive (single 0xff byte)\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Kris Zyp\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/ordered-binary/-/ordered-binary-1.5.3.tgz#8bee2aa7a82c3439caeb1e80c272fd4cf51170fb",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/ordered-binary/-/ordered-binary-1.5.3.tgz",
    "hash": "8bee2aa7a82c3439caeb1e80c272fd4cf51170fb",
    "integrity": "sha512-oGFr3T+pYdTGJ+YFEILMpS3es+GiIbs9h/XQrclBXUtd44ey7XwfsMzM31f64I1SQOawDoDr/D823kNCADI8TA==",
    "registry": "npm",
    "packageName": "ordered-binary",
    "cacheIntegrity": "sha512-oGFr3T+pYdTGJ+YFEILMpS3es+GiIbs9h/XQrclBXUtd44ey7XwfsMzM31f64I1SQOawDoDr/D823kNCADI8TA== sha1-i+4qp6gsNDnK6x6AwnL9TPURcPs="
  },
  "registry": "npm",
  "hash": "8bee2aa7a82c3439caeb1e80c272fd4cf51170fb"
}