{
  "manifest": {
    "name": "log4js",
    "version": "6.9.1",
    "description": "Port of Log4js to work with node.",
    "homepage": "https://log4js-node.github.io/log4js-node/",
    "files": [
      "lib",
      "types/*.d.ts",
      "CHANGELOG.md",
      "SECURITY.md"
    ],
    "keywords": [
      "logging",
      "log",
      "log4j",
      "node"
    ],
    "license": "Apache-2.0",
    "main": "./lib/log4js",
    "types": "./types/log4js.d.ts",
    "contributors": [
      {
        "name": "Gareth Jones",
        "email": "gareth.nomiddlename@gmail.com"
      },
      {
        "name": "Lam Wei Li",
        "email": "lam_wei_li@hotmail.com"
      }
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/log4js-node/log4js-node.git"
    },
    "bugs": {
      "url": "http://github.com/log4js-node/log4js-node/issues"
    },
    "engines": {
      "node": ">=8.0"
    },
    "scripts": {
      "prepare": "is-ci || husky install",
      "pretest": "npm run prettier --if-present && eslint \"lib/**/*.js\" \"test/**/*.js\"",
      "prettier": "prettier --check \"**/*.*\"",
      "prettier:fix": "prettier --write \"**/*.*\"",
      "test": "tap \"test/tap/**/*.js\" --cov --reporter=classic --coverage-report=text --coverage-report=html --timeout=45",
      "typings": "tsc -p types/tsconfig.json"
    },
    "dependencies": {
      "date-format": "^4.0.14",
      "debug": "^4.3.4",
      "flatted": "^3.2.7",
      "rfdc": "^1.3.0",
      "streamroller": "^3.1.5"
    },
    "devDependencies": {
      "@commitlint/cli": "^17.4.4",
      "@commitlint/config-conventional": "^17.4.4",
      "@log4js-node/sandboxed-module": "^2.2.1",
      "callsites": "^3.1.0",
      "deep-freeze": "0.0.1",
      "eslint": "^8.34.0",
      "eslint-config-airbnb-base": "^15.0.0",
      "eslint-config-prettier": "^8.6.0",
      "eslint-import-resolver-node": "^0.3.7",
      "eslint-plugin-import": "^2.27.5",
      "eslint-plugin-prettier": "^4.2.1",
      "fs-extra": "^11.1.0",
      "husky": "^8.0.3",
      "is-ci": "^3.0.1",
      "nyc": "^15.1.0",
      "prettier": "^2.8.4",
      "proxyquire": "^2.1.3",
      "tap": "^16.3.4",
      "typescript": "^4.9.5"
    },
    "browser": {
      "os": false,
      "streamroller": false,
      "./lib/clustering.js": "./lib/clusteringBrowser.js",
      "./lib/appenders/dateFile.js": "./lib/appenders/ignoreBrowser.js",
      "./lib/appenders/file.js": "./lib/appenders/ignoreBrowser.js",
      "./lib/appenders/fileSync.js": "./lib/appenders/ignoreBrowser.js",
      "./lib/appenders/multiFile.js": "./lib/appenders/ignoreBrowser.js"
    },
    "prettier": {
      "trailingComma": "es5",
      "arrowParens": "always",
      "overrides": [
        {
          "files": [
            "*.cjs"
          ],
          "options": {
            "parser": "typescript"
          }
        }
      ]
    },
    "tap": {
      "check-coverage": true
    },
    "nyc": {
      "all": true,
      "include": [
        "lib/**/*.js"
      ],
      "require": [
        "./test/sandbox-coverage"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/runner/website-breaker2/.cache/yarn/v6/npm-log4js-6.9.1-aba5a3ff4e7872ae34f8b4c533706753709e38b6-integrity/node_modules/log4js/package.json",
    "readmeFilename": "README.md",
    "readme": "# log4js-node [![CodeQL](https://github.com/log4js-node/log4js-node/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/log4js-node/log4js-node/actions/workflows/codeql-analysis.yml) [![Node.js CI](https://github.com/log4js-node/log4js-node/actions/workflows/node.js.yml/badge.svg)](https://github.com/log4js-node/log4js-node/actions/workflows/node.js.yml)\n\n[![NPM](https://nodei.co/npm/log4js.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/log4js/)\n\nThis is a conversion of the [log4js](https://github.com/stritti/log4js)\nframework to work with [node](http://nodejs.org). I started out just stripping out the browser-specific code and tidying up some of the javascript to work better in node. It grew from there. Although it's got a similar name to the Java library [log4j](https://logging.apache.org/log4j/2.x/), thinking that it will behave the same way will only bring you sorrow and confusion.\n\nThe full documentation is available [here](https://log4js-node.github.io/log4js-node/).\n\n[Changes in version 3.x](https://log4js-node.github.io/log4js-node/v3-changes.md)\n\nThere have been a few changes between log4js 1.x and 2.x (and 0.x too). You should probably read this [migration guide](https://log4js-node.github.io/log4js-node/migration-guide.html) if things aren't working.\n\nOut of the box it supports the following features:\n\n- coloured console logging to stdout or stderr\n- file appender, with configurable log rolling based on file size or date\n- a logger for connect/express servers\n- configurable log message layout/patterns\n- different log levels for different log categories (make some parts of your app log as DEBUG, others only ERRORS, etc.)\n\nOptional appenders are available:\n\n- [SMTP](https://github.com/log4js-node/smtp)\n- [GELF](https://github.com/log4js-node/gelf)\n- [Loggly](https://github.com/log4js-node/loggly)\n- Logstash ([UDP](https://github.com/log4js-node/logstashUDP) and [HTTP](https://github.com/log4js-node/logstashHTTP))\n- logFaces ([UDP](https://github.com/log4js-node/logFaces-UDP) and [HTTP](https://github.com/log4js-node/logFaces-HTTP))\n- [RabbitMQ](https://github.com/log4js-node/rabbitmq)\n- [Redis](https://github.com/log4js-node/redis)\n- [Hipchat](https://github.com/log4js-node/hipchat)\n- [Slack](https://github.com/log4js-node/slack)\n- [mailgun](https://github.com/log4js-node/mailgun)\n- [InfluxDB](https://github.com/rnd-debug/log4js-influxdb-appender)\n\n## Getting help\n\nHaving problems? Jump on the [slack](https://join.slack.com/t/log4js-node/shared_invite/enQtODkzMDQ3MzExMDczLWUzZmY0MmI0YWI1ZjFhODY0YjI0YmU1N2U5ZTRkOTYyYzg3MjY5NWI4M2FjZThjYjdiOGM0NjU2NzBmYTJjOGI) channel, or create an issue. If you want to help out with the development, the slack channel is a good place to go as well.\n\n## installation\n\n```bash\nnpm install log4js\n```\n\n## usage\n\nMinimalist version:\n\n```javascript\nvar log4js = require(\"log4js\");\nvar logger = log4js.getLogger();\nlogger.level = \"debug\";\nlogger.debug(\"Some debug messages\");\n```\n\nBy default, log4js will not output any logs (so that it can safely be used in libraries). The `level` for the `default` category is set to `OFF`. To enable logs, set the level (as in the example). This will then output to stdout with the coloured layout (thanks to [masylum](http://github.com/masylum)), so for the above you would see:\n\n```bash\n[2010-01-17 11:43:37.987] [DEBUG] [default] - Some debug messages\n```\n\nSee example.js for a full example, but here's a snippet (also in `examples/fromreadme.js`):\n\n```javascript\nconst log4js = require(\"log4js\");\nlog4js.configure({\n  appenders: { cheese: { type: \"file\", filename: \"cheese.log\" } },\n  categories: { default: { appenders: [\"cheese\"], level: \"error\" } },\n});\n\nconst logger = log4js.getLogger(\"cheese\");\nlogger.trace(\"Entering cheese testing\");\nlogger.debug(\"Got cheese.\");\nlogger.info(\"Cheese is Comt√©.\");\nlogger.warn(\"Cheese is quite smelly.\");\nlogger.error(\"Cheese is too ripe!\");\nlogger.fatal(\"Cheese was breeding ground for listeria.\");\n```\n\nOutput (in `cheese.log`):\n\n```bash\n[2010-01-17 11:43:37.987] [ERROR] cheese - Cheese is too ripe!\n[2010-01-17 11:43:37.990] [FATAL] cheese - Cheese was breeding ground for listeria.\n```\n\n## Note for library makers\n\nIf you're writing a library and would like to include support for log4js, without introducing a dependency headache for your users, take a look at [log4js-api](https://github.com/log4js-node/log4js-api).\n\n## Documentation\n\nAvailable [here](https://log4js-node.github.io/log4js-node/).\n\nThere's also [an example application](https://github.com/log4js-node/log4js-example).\n\n## TypeScript\n\n```ts\nimport * as log4js from \"log4js\";\nlog4js.configure({\n  appenders: { cheese: { type: \"file\", filename: \"cheese.log\" } },\n  categories: { default: { appenders: [\"cheese\"], level: \"error\" } },\n});\n\nconst logger = log4js.getLogger();\nlogger.level = \"debug\";\nlogger.debug(\"Some debug messages\");\n```\n\n## Contributing\n\nWe're always looking for people to help out. Jump on [slack](https://join.slack.com/t/log4js-node/shared_invite/enQtODkzMDQ3MzExMDczLWUzZmY0MmI0YWI1ZjFhODY0YjI0YmU1N2U5ZTRkOTYyYzg3MjY5NWI4M2FjZThjYjdiOGM0NjU2NzBmYTJjOGI) and discuss what you want to do. Also, take a look at the [rules](https://log4js-node.github.io/log4js-node/contrib-guidelines.html) before submitting a pull request.\n\n## License\n\nThe original log4js was distributed under the Apache 2.0 License, and so is this. I've tried to\nkeep the original copyright and author credits in place, except in sections that I have rewritten\nextensively.\n",
    "licenseText": "Copyright 2015 Gareth Jones (with contributions from many other people)\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/log4js/-/log4js-6.9.1.tgz#aba5a3ff4e7872ae34f8b4c533706753709e38b6",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/log4js/-/log4js-6.9.1.tgz",
    "hash": "aba5a3ff4e7872ae34f8b4c533706753709e38b6",
    "integrity": "sha512-1somDdy9sChrr9/f4UlzhdaGfDR2c/SaD2a4T7qEkG4jTS57/B3qmnjLYePwQ8cqWnUHZI0iAKxMBpCZICiZ2g==",
    "registry": "npm",
    "packageName": "log4js",
    "cacheIntegrity": "sha512-1somDdy9sChrr9/f4UlzhdaGfDR2c/SaD2a4T7qEkG4jTS57/B3qmnjLYePwQ8cqWnUHZI0iAKxMBpCZICiZ2g== sha1-q6Wj/054cq40+LTFM3BnU3CeOLY="
  },
  "registry": "npm",
  "hash": "aba5a3ff4e7872ae34f8b4c533706753709e38b6"
}