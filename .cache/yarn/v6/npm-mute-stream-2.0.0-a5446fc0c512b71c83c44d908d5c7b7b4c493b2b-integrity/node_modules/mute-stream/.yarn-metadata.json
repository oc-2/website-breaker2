{
  "manifest": {
    "name": "mute-stream",
    "version": "2.0.0",
    "main": "lib/index.js",
    "devDependencies": {
      "@npmcli/eslint-config": "^5.0.0",
      "@npmcli/template-oss": "4.23.3",
      "tap": "^16.3.0"
    },
    "scripts": {
      "test": "tap",
      "lint": "npm run eslint",
      "postlint": "template-oss-check",
      "template-oss-apply": "template-oss-apply --force",
      "lintfix": "npm run eslint -- --fix",
      "snap": "tap",
      "posttest": "npm run lint",
      "eslint": "eslint \"**/*.{js,cjs,ts,mjs,jsx,tsx}\""
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/npm/mute-stream.git"
    },
    "keywords": [
      "mute",
      "stream",
      "pipe"
    ],
    "author": {
      "name": "GitHub Inc."
    },
    "license": "ISC",
    "description": "Bytes go in, but they don't come out (when muted).",
    "files": [
      "bin/",
      "lib/"
    ],
    "tap": {
      "statements": 70,
      "branches": 60,
      "functions": 81,
      "lines": 70,
      "nyc-arg": [
        "--exclude",
        "tap-snapshots/**"
      ]
    },
    "engines": {
      "node": "^18.17.0 || >=20.5.0"
    },
    "templateOSS": {
      "//@npmcli/template-oss": "This file is partially managed by @npmcli/template-oss. Edits may be overwritten.",
      "version": "4.23.3",
      "publish": true
    },
    "_registry": "npm",
    "_loc": "/home/runner/website-breaker2/.cache/yarn/v6/npm-mute-stream-2.0.0-a5446fc0c512b71c83c44d908d5c7b7b4c493b2b-integrity/node_modules/mute-stream/package.json",
    "readmeFilename": "README.md",
    "readme": "# mute-stream\n\nBytes go in, but they don't come out (when muted).\n\nThis is a basic pass-through stream, but when muted, the bytes are\nsilently dropped, rather than being passed through.\n\n## Usage\n\n```javascript\nconst MuteStream = require('mute-stream')\n\nconst ms = new MuteStream(options)\n\nms.pipe(process.stdout)\nms.write('foo') // writes 'foo' to stdout\nms.mute()\nms.write('bar') // does not write 'bar'\nms.unmute()\nms.write('baz') // writes 'baz' to stdout\n\n// can also be used to mute incoming data\nconst ms = new MuteStream()\ninput.pipe(ms)\n\nms.on('data', function (c) {\n  console.log('data: ' + c)\n})\n\ninput.emit('data', 'foo') // logs 'foo'\nms.mute()\ninput.emit('data', 'bar') // does not log 'bar'\nms.unmute()\ninput.emit('data', 'baz') // logs 'baz'\n```\n\n## Options\n\nAll options are optional.\n\n* `replace` Set to a string to replace each character with the\n  specified string when muted.  (So you can show `****` instead of the\n  password, for example.)\n\n* `prompt` If you are using a replacement char, and also using a\n  prompt with a readline stream (as for a `Password: *****` input),\n  then specify what the prompt is so that backspace will work\n  properly.  Otherwise, pressing backspace will overwrite the prompt\n  with the replacement character, which is weird.\n\n## ms.mute()\n\nSet `muted` to `true`.  Turns `.write()` into a no-op.\n\n## ms.unmute()\n\nSet `muted` to `false`\n\n## ms.isTTY\n\nTrue if the pipe destination is a TTY, or if the incoming pipe source is\na TTY.\n\n## Other stream methods...\n\nThe other standard readable and writable stream methods are all\navailable.  The MuteStream object acts as a facade to its pipe source\nand destination.\n",
    "licenseText": "The ISC License\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/mute-stream/-/mute-stream-2.0.0.tgz#a5446fc0c512b71c83c44d908d5c7b7b4c493b2b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/mute-stream/-/mute-stream-2.0.0.tgz",
    "hash": "a5446fc0c512b71c83c44d908d5c7b7b4c493b2b",
    "integrity": "sha512-WWdIxpyjEn+FhQJQQv9aQAYlHoNVdzIzUySNV1gHUPDSdZJ3yZn7pAAbQcV7B56Mvu881q9FZV+0Vx2xC44VWA==",
    "registry": "npm",
    "packageName": "mute-stream",
    "cacheIntegrity": "sha512-WWdIxpyjEn+FhQJQQv9aQAYlHoNVdzIzUySNV1gHUPDSdZJ3yZn7pAAbQcV7B56Mvu881q9FZV+0Vx2xC44VWA== sha1-pURvwMUStxyDxE2QjVx7e0xJOys="
  },
  "registry": "npm",
  "hash": "a5446fc0c512b71c83c44d908d5c7b7b4c493b2b"
}