{
  "manifest": {
    "name": "@inquirer/number",
    "version": "3.0.2",
    "description": "Inquirer number prompt",
    "keywords": [
      "answer",
      "answers",
      "ask",
      "base",
      "cli",
      "command",
      "command-line",
      "confirm",
      "enquirer",
      "generate",
      "generator",
      "hyper",
      "input",
      "inquire",
      "inquirer",
      "interface",
      "iterm",
      "javascript",
      "menu",
      "node",
      "nodejs",
      "prompt",
      "promptly",
      "prompts",
      "question",
      "readline",
      "scaffold",
      "scaffolder",
      "scaffolding",
      "stdin",
      "stdout",
      "terminal",
      "tty",
      "ui",
      "yeoman",
      "yo",
      "zsh"
    ],
    "homepage": "https://github.com/SBoudrias/Inquirer.js/blob/main/packages/number/README.md",
    "repository": {
      "type": "git",
      "url": "https://github.com/SBoudrias/Inquirer.js.git"
    },
    "license": "MIT",
    "author": {
      "name": "Simon Boudrias",
      "email": "admin@simonboudrias.com"
    },
    "sideEffects": false,
    "type": "module",
    "exports": {
      "./package.json": "./package.json",
      ".": {
        "import": {
          "types": "./dist/esm/index.d.ts",
          "default": "./dist/esm/index.js"
        },
        "require": {
          "types": "./dist/commonjs/index.d.ts",
          "default": "./dist/commonjs/index.js"
        }
      }
    },
    "main": "./dist/commonjs/index.js",
    "module": "./dist/esm/index.js",
    "types": "./dist/commonjs/index.d.ts",
    "files": [
      "dist"
    ],
    "scripts": {
      "attw": "attw --pack",
      "tsc": "tshy"
    },
    "dependencies": {
      "@inquirer/core": "^10.1.0",
      "@inquirer/type": "^3.0.1"
    },
    "devDependencies": {
      "@arethetypeswrong/cli": "^0.17.0",
      "@inquirer/testing": "^2.1.37",
      "@repo/tsconfig": "workspace:*",
      "tshy": "^3.0.2"
    },
    "engines": {
      "node": ">=18"
    },
    "publishConfig": {
      "access": "public"
    },
    "tshy": {
      "exclude": [
        "src/**/*.test.ts"
      ],
      "exports": {
        "./package.json": "./package.json",
        ".": "./src/index.ts"
      }
    },
    "peerDependencies": {
      "@types/node": ">=18"
    },
    "gitHead": "84e49bdb552e1cb4f035d644190913f367a66e74",
    "_registry": "npm",
    "_loc": "/home/runner/website-breaker2/.cache/yarn/v6/npm-@inquirer-number-3.0.2-7e8315b41601d377cc09802b66f32b481e14fd68-integrity/node_modules/@inquirer/number/package.json",
    "readmeFilename": "README.md",
    "readme": "# `@inquirer/number`\n\nInteractive free number input component for command line interfaces. Supports validation, filtering, transformation, etc.\n\n# Installation\n\n<table>\n<tr>\n  <th>npm</th>\n  <th>yarn</th>\n</tr>\n<tr>\n<td>\n\n```sh\nnpm install @inquirer/prompts\n```\n\n</td>\n<td>\n\n```sh\nyarn add @inquirer/prompts\n```\n\n</td>\n</tr>\n<tr>\n<td colSpan=\"2\" align=\"center\">Or</td>\n</tr>\n<tr>\n<td>\n\n```sh\nnpm install @inquirer/number\n```\n\n</td>\n<td>\n\n```sh\nyarn add @inquirer/number\n```\n\n</td>\n</tr>\n</table>\n\n# Usage\n\n```js\nimport { number } from '@inquirer/prompts';\n// Or\n// import number from '@inquirer/number';\n\nconst answer = await number({ message: 'Enter your age' });\n```\n\n## Options\n\n| Property | Type                                                                       | Required | Description                                                                                                                                                                                                                                                     |\n| -------- | -------------------------------------------------------------------------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| message  | `string`                                                                   | yes      | The question to ask                                                                                                                                                                                                                                             |\n| default  | `number`                                                                   | no       | Default value if no answer is provided (clear it by pressing backspace)                                                                                                                                                                                         |\n| min      | `number`                                                                   | no       | The minimum value to accept for this input.                                                                                                                                                                                                                     |\n| max      | `number`                                                                   | no       | The maximum value to accept for this input.                                                                                                                                                                                                                     |\n| step     | `number \\| 'any'`                                                          | no       | The step option is a number that specifies the granularity that the value must adhere to. Only values which are equal to the basis for stepping (min if specified) are valid. This value defaults to 1, meaning by default the prompt will only allow integers. |\n| required | `boolean`                                                                  | no       | Defaults to `false`. If set to true, `undefined` (empty) will not be accepted for this.                                                                                                                                                                         |\n| validate | `(number \\| undefined) => boolean \\| string \\| Promise<boolean \\| string>` | no       | On submit, validate the filtered answered content. When returning a string, it'll be used as the error message displayed to the user. Note: returning a rejected promise, we'll assume a code error happened and crash.                                         |\n| theme    | [See Theming](#Theming)                                                    | no       | Customize look of the prompt.                                                                                                                                                                                                                                   |\n\n## Theming\n\nYou can theme a prompt by passing a `theme` object option. The theme object only need to includes the keys you wish to modify, we'll fallback on the defaults for the rest.\n\n```ts\ntype Theme = {\n  prefix: string | { idle: string; done: string };\n  spinner: {\n    interval: number;\n    frames: string[];\n  };\n  style: {\n    answer: (text: string) => string;\n    message: (text: string, status: 'idle' | 'done' | 'loading') => string;\n    error: (text: string) => string;\n    defaultAnswer: (text: string) => string;\n  };\n};\n```\n\n# License\n\nCopyright (c) 2023 Simon Boudrias (twitter: [@vaxilart](https://twitter.com/Vaxilart))<br/>\nLicensed under the MIT license.\n",
    "licenseText": "Copyright (c) 2023 Simon Boudrias\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@inquirer/number/-/number-3.0.2.tgz#7e8315b41601d377cc09802b66f32b481e14fd68",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@inquirer/number/-/number-3.0.2.tgz",
    "hash": "7e8315b41601d377cc09802b66f32b481e14fd68",
    "integrity": "sha512-MKQhYofdUNk7eqJtz52KvM1dH6R93OMrqHduXCvuefKrsiMjHiMwjc3NZw5Imm2nqY7gWd9xdhYrtcHMJQZUxA==",
    "registry": "npm",
    "packageName": "@inquirer/number",
    "cacheIntegrity": "sha512-MKQhYofdUNk7eqJtz52KvM1dH6R93OMrqHduXCvuefKrsiMjHiMwjc3NZw5Imm2nqY7gWd9xdhYrtcHMJQZUxA== sha1-foMVtBYB03fMCYArZvMrSB4U/Wg="
  },
  "registry": "npm",
  "hash": "7e8315b41601d377cc09802b66f32b481e14fd68"
}