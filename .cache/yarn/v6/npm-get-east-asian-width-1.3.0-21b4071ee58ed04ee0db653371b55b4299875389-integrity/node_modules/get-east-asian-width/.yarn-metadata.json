{
  "manifest": {
    "name": "get-east-asian-width",
    "version": "1.3.0",
    "description": "Determine the East Asian Width of a Unicode character",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/get-east-asian-width.git"
    },
    "funding": "https://github.com/sponsors/sindresorhus",
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "https://sindresorhus.com"
    },
    "type": "module",
    "exports": {
      "types": "./index.d.ts",
      "default": "./index.js"
    },
    "sideEffects": false,
    "engines": {
      "node": ">=18"
    },
    "scripts": {
      "test": "xo && ava && tsc index.d.ts",
      "build": "node scripts/build.js",
      "prepublish": "npm run build"
    },
    "files": [
      "index.js",
      "index.d.ts",
      "lookup.js"
    ],
    "keywords": [
      "unicode",
      "east-asian-width",
      "eastasianwidth",
      "character",
      "string",
      "width",
      "text",
      "layout",
      "alignment",
      "fullwidth",
      "halfwidth",
      "ambiguous",
      "narrow",
      "wide",
      "neutral",
      "typography",
      "japanese",
      "chinese",
      "korean",
      "codepoint",
      "text-processing",
      "i18n",
      "l10n"
    ],
    "devDependencies": {
      "ava": "^5.3.1",
      "indent-string": "^5.0.0",
      "outdent": "^0.8.0",
      "simplify-ranges": "^0.1.0",
      "typescript": "^5.2.2",
      "xo": "^0.56.0"
    },
    "xo": {
      "ignores": [
        "lookup.js"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/runner/website-breaker2/.cache/yarn/v6/npm-get-east-asian-width-1.3.0-21b4071ee58ed04ee0db653371b55b4299875389-integrity/node_modules/get-east-asian-width/package.json",
    "readmeFilename": "readme.md",
    "readme": "# get-east-asian-width\n\n> Determine the [East Asian Width](https://unicode.org/reports/tr11/) of a Unicode character\n\n> East Asian Width categorizes Unicode characters based on their occupied space in East Asian typography, which helps in text layout and alignment, particularly in languages like Japanese, Chinese, and Korean.\n\nUnlike other similar packages, this package uses the latest Unicode data (which changes each year).\n\n## Install\n\n```sh\nnpm install get-east-asian-width\n```\n\n## Usage\n\n```js\nimport {eastAsianWidth, eastAsianWidthType} from 'get-east-asian-width';\n\nconst codePoint = '字'.codePointAt(0);\n\nconsole.log(eastAsianWidth(codePoint));\n//=> 2\n\nconsole.log(eastAsianWidthType(codePoint));\n//=> 'wide'\n```\n\n## `eastAsianWidth(codePoint: number, options?: object): 1 | 2`\n\nReturns the width as a number for the given code point.\n\n### options\n\nType: `object`\n\n#### ambiguousAsWide\n\nType: `boolean`\\\nDefault: `false`\n\nWhether to treat an `'ambiguous'` character as wide.\n\n```js\nimport {eastAsianWidth} from 'get-east-asian-width';\n\nconst codePoint = '⛣'.codePointAt(0);\n\nconsole.log(eastAsianWidth(codePoint));\n//=> 1\n\nconsole.log(eastAsianWidth(codePoint, {ambiguousAsWide: true}));\n//=> 2\n```\n\n> Ambiguous characters behave like wide or narrow characters depending on the context (language tag, script identification, associated font, source of data, or explicit markup; all can provide the context). **If the context cannot be established reliably, they should be treated as narrow characters by default.**\n> - http://www.unicode.org/reports/tr11/\n\n## `eastAsianWidthType(codePoint: number): 'fullwidth' | 'halfwidth' | 'wide' | 'narrow' | 'neutral' | 'ambiguous'`\n\nReturns the type of “East Asian Width” for the given code point.\n\n## Related\n\n- [string-width](https://github.com/sindresorhus/string-width) - Get the visual width of a string\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/get-east-asian-width/-/get-east-asian-width-1.3.0.tgz#21b4071ee58ed04ee0db653371b55b4299875389",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/get-east-asian-width/-/get-east-asian-width-1.3.0.tgz",
    "hash": "21b4071ee58ed04ee0db653371b55b4299875389",
    "integrity": "sha512-vpeMIQKxczTD/0s2CdEWHcb0eeJe6TFjxb+J5xgX7hScxqrGuyjmv4c1D4A/gelKfyox0gJJwIHF+fLjeaM8kQ==",
    "registry": "npm",
    "packageName": "get-east-asian-width",
    "cacheIntegrity": "sha512-vpeMIQKxczTD/0s2CdEWHcb0eeJe6TFjxb+J5xgX7hScxqrGuyjmv4c1D4A/gelKfyox0gJJwIHF+fLjeaM8kQ== sha1-IbQHHuWO0E7g22UzcbVbQpmHU4k="
  },
  "registry": "npm",
  "hash": "21b4071ee58ed04ee0db653371b55b4299875389"
}