{
  "manifest": {
    "name": "ent",
    "description": "Encode and decode HTML entities",
    "version": "2.2.1",
    "repository": {
      "type": "git",
      "url": "https://github.com/ljharb/ent.git"
    },
    "author": {
      "name": "James Halliday",
      "email": "mail@substack.net",
      "url": "http://substack.net"
    },
    "main": "./index.js",
    "keywords": [
      "entities",
      "entitify",
      "entity",
      "html",
      "encode",
      "decode"
    ],
    "license": "MIT",
    "scripts": {
      "prepack": "npmignore --auto --commentLines=autogenerated",
      "prepublish": "not-in-publish || npm run prepublishOnly",
      "prepublishOnly": "safe-publish-latest && npm run build",
      "lint": "eslint --ext=js,mjs .",
      "postlint": "evalmd readme.markdown",
      "pretest": "npm run lint",
      "tests-only": "tape 'test/**/*.js'",
      "test": "npm run tests-only",
      "posttest": "aud --production",
      "build": "node build",
      "version": "auto-changelog && git add CHANGELOG.md",
      "postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
    },
    "dependencies": {
      "punycode": "^1.4.1"
    },
    "devDependencies": {
      "@ljharb/eslint-config": "^21.1.1",
      "aud": "^2.0.4",
      "auto-changelog": "^2.4.0",
      "eslint": "=8.8.0",
      "evalmd": "^0.0.19",
      "in-publish": "^2.0.1",
      "npmignore": "^0.3.1",
      "safe-publish-latest": "^2.0.0",
      "tape": "^5.8.1"
    },
    "testling": {
      "files": "test/*.js"
    },
    "engines": {
      "node": ">= 0.4"
    },
    "auto-changelog": {
      "output": "CHANGELOG.md",
      "template": "keepachangelog",
      "unreleased": false,
      "commitLimit": false,
      "backfillLimit": false,
      "hideCredit": true
    },
    "publishConfig": {
      "ignore": [
        ".github/workflows",
        "build"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/runner/website-breaker2/.cache/yarn/v6/npm-ent-2.2.1-68dc99a002f115792c26239baedaaea9e70c0ca2-integrity/node_modules/ent/package.json",
    "readmeFilename": "readme.markdown",
    "readme": "# ent\n\nEncode and decode HTML entities\n\n[![build status](https://secure.travis-ci.org/ljharb/ent.png)](http://travis-ci.org/ljharb/ent)\n\n# example\n\n``` js\nvar ent = require('ent');\nconsole.log(ent.encode('<span>©moo</span>'))\nconsole.log(ent.decode('&pi; &amp; &rho;'));\n```\n\n```\n&#60;span&#62;&#169;moo&#60;/span&#62;\nπ & ρ\n```\n\n![ent](https://web.archive.org/web/20170823120015if_/http://substack.net/images/ent.png)\n\n# methods\n\n``` js\nvar ent = require('ent');\nvar encode = require('ent/encode');\nvar decode = require('ent/decode');\n```\n\n## encode(str, opts={})\n\nEscape unsafe characters in `str` with html entities.\n\nBy default, entities are encoded with numeric decimal codes.\n\nIf `opts.numeric` is false or `opts.named` is true, encoding will used named\ncodes like `&pi;`.\n\nIf `opts.special` is set to an Object, the key names will be forced\nto be encoded (defaults to forcing: `<>'\"&`). For example:\n\n``` js\nconsole.log(encode('hello', { special: { l: true } }));\n```\n\n```\nhe&#108;&#108;o\n```\n\n## decode(str)\n\nConvert html entities in `str` back to raw text.\n\n# credits\n\nHTML entity tables are from the official\n[`entities.json`](https://html.spec.whatwg.org/entities.json) file for\nthe [whatwg HTML\nspecification](https://html.spec.whatwg.org/multipage/syntax.html#named-character-references).\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install ent\n```\n\n# license\n\nMIT\n",
    "licenseText": "This software is released under the MIT license:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/ent/-/ent-2.2.1.tgz#68dc99a002f115792c26239baedaaea9e70c0ca2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/ent/-/ent-2.2.1.tgz",
    "hash": "68dc99a002f115792c26239baedaaea9e70c0ca2",
    "integrity": "sha512-QHuXVeZx9d+tIQAz/XztU0ZwZf2Agg9CcXcgE1rurqvdBeDBrpSwjl8/6XUqMg7tw2Y7uAdKb2sRv+bSEFqQ5A==",
    "registry": "npm",
    "packageName": "ent",
    "cacheIntegrity": "sha512-QHuXVeZx9d+tIQAz/XztU0ZwZf2Agg9CcXcgE1rurqvdBeDBrpSwjl8/6XUqMg7tw2Y7uAdKb2sRv+bSEFqQ5A== sha1-aNyZoALxFXksJiObrtquqecMDKI="
  },
  "registry": "npm",
  "hash": "68dc99a002f115792c26239baedaaea9e70c0ca2"
}