{
  "manifest": {
    "name": "thingies",
    "version": "1.21.0",
    "description": "Useful TypeScript utilities. [__Documentation__](https://streamich.github.io/thingies).",
    "author": {
      "name": "streamich",
      "url": "https://github.com/streamich"
    },
    "homepage": "https://github.com/streamich/thingies",
    "repository": {
      "type": "git",
      "url": "https://github.com/streamich/thingies.git"
    },
    "license": "Unlicense",
    "engines": {
      "node": ">=10.18"
    },
    "main": "lib/index.js",
    "module": "es6/index.js",
    "files": [
      "lib/",
      "es6/",
      "es2020/"
    ],
    "types": "lib/index.d.ts",
    "typings": "lib/index.d.ts",
    "scripts": {
      "prettier": "prettier --ignore-path .gitignore --write 'src/**/*.{ts,tsx,js,jsx}'",
      "prettier:diff": "prettier -l 'src/**/*.{ts,tsx,js,jsx}'",
      "tslint": "tslint 'src/**/*.{js,jsx,ts,tsx}' -t verbose",
      "lint": "yarn tslint",
      "clean": "rimraf lib es6 es2020",
      "build:cjs": "tsc",
      "build:es6": "tsc --module commonjs --target es6 --outDir es6",
      "build:es2020": "tsc --project tsconfig.build.json --module commonjs --target es2020 --outDir es2020",
      "build": "yarn build:cjs && yarn build:es6 && yarn build:es2020",
      "test": "jest --no-cache --config='jest.config.js'",
      "release": "semantic-release"
    },
    "keywords": [],
    "dependencies": {},
    "peerDependencies": {
      "tslib": "^2"
    },
    "devDependencies": {
      "@semantic-release/changelog": "^6.0.0",
      "@semantic-release/git": "^10.0.0",
      "@semantic-release/npm": "^8.0.2",
      "@types/jest": "^29.5.12",
      "husky": "^8.0.0",
      "jest": "^29.7.0",
      "prettier": "^3.0.0",
      "pretty-quick": "^3.1.1",
      "rimraf": "^3.0.2",
      "semantic-release": "^18.0.0",
      "ts-jest": "^29.1.2",
      "tslint": "^6.1.3",
      "tslint-config-common": "^1.6.2",
      "typescript": "^5.0.3",
      "tslib": "^2.6.2"
    },
    "release": {
      "verifyConditions": [
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/git"
      ],
      "prepare": [
        "@semantic-release/changelog",
        "@semantic-release/npm",
        "@semantic-release/git"
      ],
      "branches": [
        "main"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/runner/website-breaker2/.cache/yarn/v6/npm-thingies-1.21.0-e80fbe58fd6fdaaab8fad9b67bd0a5c943c445c1-integrity/node_modules/thingies/package.json",
    "readmeFilename": "README.md",
    "readme": "# thingies\n\nUseful TypeScript utilities. [__Documentation__](https://streamich.github.io/thingies).\n\n\n## Menu\n\n- `base64` &mdash; Base64 encoding end decoding functions for Node.js.\n\n---\n\n- `Cache` &mdash; implementation of local memory cache for database records. Can cache\n  retrieved database records for few dozen seconds and has garbage collection logic\n  which clears the memory of old items after some time.\n\n---\n\n- `Defer` &mdash; an inverted `Promise`, an object which allows you to imperatively\n  control the behavior of a `Promise`.\n\n---\n\n- `hash` &mdash; a fast and simple utility, which hashes a string to an integer. Useful\n  for generating a shard index of a record based on its ID.\n\n---\n\n- `LruMap` &mdash; tiny and fast *Least Recently Used Cache* implemented on top of the `Map` class.\n\n---\n\n- `LruTtlMap` &mdash; tiny and fast *Least Recently Used Cache* with expiration timestamp\n  stored for each entry implemented on top of the `LruMap` class.\n\n---\n\n- `normalizeEmail` &mdash; normalizes email by stripping out `.` and `+` characters and\n  removing everything after the `+` character and lower-casing the e-mail. Useful for\n  getting an e-mail into a common form when throttling requests by e-mail.\n\n---\n\n- `of` &mdash; returns result of a `Promise` as a 3-tuple `[value, error, isError]`.\n\n---\n\n- `promiseMap` &mdash; maps a list of values to an async function and waits until\n  all results complete execution.\n\n---\n\n- `randomStr` &mdash; generates a random string of given size. Alphabet for character\n  picking can be provided. Useful for generating random database record IDs.\n\n---\n\n- `TimedQueue` &mdash; a queue which can be flushed manually, or which flushes\n  automatically when the number of queued items reaches a threshold or when a timeout\n  expires since the first item was added to the queue. Useful for batching multiple\n  messages or requests for bulk processing.\n\n---\n\n- `TimedState` &mdash; works similar to `TimedQueue`, but instead of keeping track of\n  all items pushed, it invokes a reducer to update the state with the information from\n  the last pushed item.\n\n---\n\n- `tick` &mdash; returns a `Promise` which resolves after a given number of milliseconds,\n  useful for releasing the event loop for a short period of time, `await tick(5)`.\n\n---\n\n- `until` &mdash; waits for some condition to become true `await until(() => condition)`,\n  useful when waiting for some asynchronous task to happen in a test.\n\n---\n\n- `concurrency` &mdash; limits the number of concurrent executions of asynchronous\n  code. `concurrencyDecorator` limits the number of concurrent executions of a\n  class method.\n\n---\n\n- `codeMutex` &mdash; a mutex which can be used to synchronize code execution. Code\n  wrapped by this mutex will execute only one at a time, for all parallel calls to\n  the same mutex.\n\n- `@mutex` and `mutex()` &mdash; same as `codeMutex`, but can be used as a decorator\n  or a higher order function.\n\n---\n\n- `once` &mdash; a class method decorator, which limits method execution to once\n  per instance. Returns the result of the first execution for all subsequent calls.\n\n---\n\n- `loadCss` &mdash; loads a CSS file into the DOM, given a URL. Does nothing on the\n  server.\n\n---\n\n- `dataUri` &mdash; converts a string to a data URI.\n\n---\n\n- `FanOut` &mdash; a class which allows to fan out a single event to multiple\n  listeners. Useful for implementing event emitters. In just 12 lines of code.\n\n---\n\n- `createRace` &mdash; constructs a \"race\" function, which takes a function as\n  a single argument, the function is executed immediately only if no other\n  function is currently executing. If another function is currently executing,\n  the current function is discarded.\n\n---\n\n- `xorShift32` &mdash; generates random 32-bit integers using the very fast xorshift\n  algorithm. `makeXorShift32(seed)` returns a function which can be used to generate\n  random numbers.\n\n---\n\n- `Locks` &mdash; a lock manager, which allows to acquire an exclusive lock in\nbrowser across multiple tabs. Acquires a lock by writing to `localStorage` for\na specific key for a specified duration.\n\n---\n\n- `hasKeys` &mdash; returns `true` if an object has at lest on key.\n\n\n## License\n\n[MIT Â© Vadim Dalecky](LICENSE).\n",
    "licenseText": "MIT License\n\nCopyright (c) 2020 Vadim @streamich Dalecky\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/thingies/-/thingies-1.21.0.tgz#e80fbe58fd6fdaaab8fad9b67bd0a5c943c445c1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/thingies/-/thingies-1.21.0.tgz",
    "hash": "e80fbe58fd6fdaaab8fad9b67bd0a5c943c445c1",
    "integrity": "sha512-hsqsJsFMsV+aD4s3CWKk85ep/3I9XzYV/IXaSouJMYIoDlgyi11cBhsqYe9/geRfB0YIikBQg6raRaM+nIMP9g==",
    "registry": "npm",
    "packageName": "thingies",
    "cacheIntegrity": "sha512-hsqsJsFMsV+aD4s3CWKk85ep/3I9XzYV/IXaSouJMYIoDlgyi11cBhsqYe9/geRfB0YIikBQg6raRaM+nIMP9g== sha1-6A++WP1v2qq4+tm2e9ClyUPERcE="
  },
  "registry": "npm",
  "hash": "e80fbe58fd6fdaaab8fad9b67bd0a5c943c445c1"
}