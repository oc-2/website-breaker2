{
  "manifest": {
    "name": "@inquirer/prompts",
    "version": "7.1.0",
    "description": "Inquirer prompts, combined in a single package",
    "keywords": [
      "answer",
      "answers",
      "ask",
      "base",
      "cli",
      "command",
      "command-line",
      "confirm",
      "enquirer",
      "generate",
      "generator",
      "hyper",
      "input",
      "inquire",
      "inquirer",
      "interface",
      "iterm",
      "javascript",
      "menu",
      "node",
      "nodejs",
      "prompt",
      "promptly",
      "prompts",
      "question",
      "readline",
      "scaffold",
      "scaffolder",
      "scaffolding",
      "stdin",
      "stdout",
      "terminal",
      "tty",
      "ui",
      "yeoman",
      "yo",
      "zsh",
      "types",
      "typescript"
    ],
    "homepage": "https://github.com/SBoudrias/Inquirer.js/blob/main/packages/prompts/README.md",
    "repository": {
      "type": "git",
      "url": "https://github.com/SBoudrias/Inquirer.js.git"
    },
    "license": "MIT",
    "author": {
      "name": "Simon Boudrias",
      "email": "admin@simonboudrias.com"
    },
    "sideEffects": false,
    "type": "module",
    "exports": {
      "./package.json": "./package.json",
      ".": {
        "import": {
          "types": "./dist/esm/index.d.ts",
          "default": "./dist/esm/index.js"
        },
        "require": {
          "types": "./dist/commonjs/index.d.ts",
          "default": "./dist/commonjs/index.js"
        }
      }
    },
    "main": "./dist/commonjs/index.js",
    "module": "./dist/esm/index.js",
    "types": "./dist/commonjs/index.d.ts",
    "files": [
      "dist"
    ],
    "scripts": {
      "attw": "attw --pack",
      "tsc": "tshy"
    },
    "dependencies": {
      "@inquirer/checkbox": "^4.0.2",
      "@inquirer/confirm": "^5.0.2",
      "@inquirer/editor": "^4.1.0",
      "@inquirer/expand": "^4.0.2",
      "@inquirer/input": "^4.0.2",
      "@inquirer/number": "^3.0.2",
      "@inquirer/password": "^4.0.2",
      "@inquirer/rawlist": "^4.0.2",
      "@inquirer/search": "^3.0.2",
      "@inquirer/select": "^4.0.2"
    },
    "devDependencies": {
      "@arethetypeswrong/cli": "^0.17.0",
      "@inquirer/type": "^3.0.1",
      "@repo/tsconfig": "workspace:*",
      "tshy": "^3.0.2"
    },
    "engines": {
      "node": ">=18"
    },
    "tshy": {
      "exclude": [
        "src/**/*.test.ts"
      ],
      "exports": {
        "./package.json": "./package.json",
        ".": "./src/index.ts"
      }
    },
    "peerDependencies": {
      "@types/node": ">=18"
    },
    "gitHead": "84e49bdb552e1cb4f035d644190913f367a66e74",
    "_registry": "npm",
    "_loc": "/home/runner/website-breaker2/.cache/yarn/v6/npm-@inquirer-prompts-7.1.0-a55ee589c0eed0ca2ee0fbc7fc63f42f4c31a24e-integrity/node_modules/@inquirer/prompts/package.json",
    "readmeFilename": "README.md",
    "readme": "<img width=\"75px\" height=\"75px\" align=\"right\" alt=\"Inquirer Logo\" src=\"https://raw.githubusercontent.com/SBoudrias/Inquirer.js/main/assets/inquirer_readme.svg?sanitize=true\" title=\"Inquirer.js\"/>\n\n# Inquirer\n\n[![npm](https://badge.fury.io/js/@inquirer%2Fprompts.svg)](https://www.npmjs.com/package/@inquirer/prompts)\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2FSBoudrias%2FInquirer.js.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2FSBoudrias%2FInquirer.js?ref=badge_shield)\n\nA collection of common interactive command line user interfaces.\n\n![List prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/list.svg)\n\nGive it a try in your own terminal!\n\n```sh\nnpx @inquirer/demo@latest\n```\n\n# Installation\n\n<table>\n<tr>\n  <th>npm</th>\n  <th>yarn</th>\n</tr>\n<tr>\n<td>\n\n```sh\nnpm install @inquirer/prompts\n```\n\n</td>\n<td>\n\n```sh\nyarn add @inquirer/prompts\n```\n\n</td>\n</tr>\n</table>\n\n> [!NOTE]\n> Inquirer recently underwent a rewrite from the ground up to reduce the package size and improve performance. The previous version of the package is still maintained (though not actively developed), and offered hundreds of community contributed prompts that might not have been migrated to the latest API. If this is what you're looking for, the [previous package is over here](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/inquirer).\n\n# Usage\n\n```js\nimport { input } from '@inquirer/prompts';\n\nconst answer = await input({ message: 'Enter your name' });\n```\n\n# Prompts\n\n## [Input](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/input)\n\n![Input prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/input.svg)\n\n```js\nimport { input } from '@inquirer/prompts';\n```\n\n[See documentation](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/input) for usage example and options documentation.\n\n## [Select](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/select)\n\n![Select prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/list.svg)\n\n```js\nimport { select } from '@inquirer/prompts';\n```\n\n[See documentation](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/select) for usage example and options documentation.\n\n## [Checkbox](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/checkbox)\n\n![Checkbox prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/checkbox.svg)\n\n```js\nimport { checkbox } from '@inquirer/prompts';\n```\n\n[See documentation](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/checkbox) for usage example and options documentation.\n\n## [Confirm](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/confirm)\n\n![Confirm prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/confirm.svg)\n\n```js\nimport { confirm } from '@inquirer/prompts';\n```\n\n[See documentation](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/confirm) for usage example and options documentation.\n\n## [Search](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/search)\n\n![search prompt](https://raw.githubusercontent.com/SBoudrias/Inquirer.js/f459199e679aec7676cecc0fc12ef8a4cd3dda0b/assets/screenshots/search.png)\n\n```js\nimport { search } from '@inquirer/prompts';\n```\n\n[See documentation](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/search) for usage example and options documentation.\n\n## [Password](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/password)\n\n![Password prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/password.svg)\n\n```js\nimport { password } from '@inquirer/prompts';\n```\n\n[See documentation](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/password) for usage example and options documentation.\n\n## [Expand](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/expand)\n\n![Expand prompt closed](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/expand-y.svg)\n![Expand prompt expanded](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/expand-d.svg)\n\n```js\nimport { expand } from '@inquirer/prompts';\n```\n\n[See documentation](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/expand) for usage example and options documentation.\n\n## [Editor](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/editor)\n\nLaunches an instance of the users preferred editor on a temporary file. Once the user exits their editor, the content of the temporary file is read as the answer. The editor used is determined by reading the $VISUAL or $EDITOR environment variables. If neither of those are present, the OS default is used (notepad on Windows, vim on Mac or Linux.)\n\n```js\nimport { editor } from '@inquirer/prompts';\n```\n\n[See documentation](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/editor) for usage example and options documentation.\n\n## [Number](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/number)\n\nVery similar to the `input` prompt, but with built-in number validation configuration option.\n\n```js\nimport { number } from '@inquirer/prompts';\n```\n\n[See documentation](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/number) for usage example and options documentation.\n\n## [Raw List](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/rawlist)\n\n![Raw list prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/rawlist.svg)\n\n```js\nimport { rawlist } from '@inquirer/prompts';\n```\n\n[See documentation](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/rawlist) for usage example and options documentation.\n\n# Create your own prompts\n\nThe [API documentation is over here](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/core), and our [testing utilities here](https://github.com/SBoudrias/Inquirer.js/tree/main/packages/testing).\n\n# Advanced usage\n\nAll inquirer prompts are a function taking 2 arguments. The first argument is the prompt configuration (unique to each prompt). The second is providing contextual or runtime configuration.\n\nThe context options are:\n\n| Property          | Type                    | Required | Description                                                  |\n| ----------------- | ----------------------- | -------- | ------------------------------------------------------------ |\n| input             | `NodeJS.ReadableStream` | no       | The stdin stream (defaults to `process.stdin`)               |\n| output            | `NodeJS.WritableStream` | no       | The stdout stream (defaults to `process.stdout`)             |\n| clearPromptOnDone | `boolean`               | no       | If true, we'll clear the screen after the prompt is answered |\n| signal            | `AbortSignal`           | no       | An AbortSignal to cancel prompts asynchronously              |\n\nExample:\n\n```js\nimport { confirm } from '@inquirer/prompts';\n\nconst allowEmail = await confirm(\n  { message: 'Do you allow us to send you email?' },\n  {\n    output: new Stream.Writable({\n      write(chunk, _encoding, next) {\n        // Do something\n        next();\n      },\n    }),\n    clearPromptOnDone: true,\n  },\n);\n```\n\n## Canceling prompt\n\nThis can preferably be done with either an `AbortController` or `AbortSignal`.\n\n```js\n// Example 1: using built-in AbortSignal utilities\nimport { confirm } from '@inquirer/prompts';\n\nconst answer = await confirm({ ... }, { signal: AbortSignal.timeout(5000) });\n```\n\n```js\n// Example 1: implementing custom cancellation logic\nimport { confirm } from '@inquirer/prompts';\n\nconst controller = new AbortController();\nsetTimeout(() => {\n  controller.abort(); // This will reject the promise\n}, 5000);\n\nconst answer = await confirm({ ... }, { signal: controller.signal });\n```\n\nAlternatively, all prompt functions are returning a cancelable promise. This special promise type has a `cancel` method that'll cancel and cleanup the prompt.\n\nOn calling `cancel`, the answer promise will become rejected.\n\n```js\nimport { confirm } from '@inquirer/prompts';\n\nconst promise = confirm(...); // Warning: for this pattern to work, `await` cannot be used.\n\npromise.cancel();\n```\n\n# Recipes\n\n## Get answers in an object\n\nWhen asking many questions, you might not want to keep one variable per answer everywhere. In which case, you can put the answer inside an object.\n\n```js\nimport { input, confirm } from '@inquirer/prompts';\n\nconst answers = {\n  firstName: await input({ message: \"What's your first name?\" }),\n  allowEmail: await confirm({ message: 'Do you allow us to send you email?' }),\n};\n\nconsole.log(answers.firstName);\n```\n\n## Ask a question conditionally\n\nMaybe some questions depend on some other question's answer.\n\n```js\nimport { input, confirm } from '@inquirer/prompts';\n\nconst allowEmail = await confirm({ message: 'Do you allow us to send you email?' });\n\nlet email;\nif (allowEmail) {\n  email = await input({ message: 'What is your email address' });\n}\n```\n\n## Get default value after timeout\n\n```js\nimport { input } from '@inquirer/prompts';\n\nconst answer = await input(\n  { message: 'Enter a value (timing out in 5 seconds)' },\n  { signal: AbortSignal.timeout(5000) },\n).catch((error) => {\n  if (error.name === 'AbortPromptError') {\n    return 'Default value';\n  }\n\n  throw error;\n});\n```\n\n## Using as pre-commit/git hooks, or scripts\n\nBy default scripts ran from tools like `husky`/`lint-staged` might not run inside an interactive shell. In non-interactive shell, Inquirer cannot run, and users cannot send keypress events to the process.\n\nFor it to work, you must make sure you start a `tty` (or \"interactive\" input stream.)\n\nIf those scripts are set within your `package.json`, you can define the stream like so:\n\n```json\n  \"precommit\": \"my-script < /dev/tty\"\n```\n\nOr if in a shell script file, you'll do it like so: (on Windows that's likely your only option)\n\n```sh\n#!/bin/sh\nexec < /dev/tty\n\nnode my-script.js\n```\n\n## Using with nodemon\n\nWhen using inquirer prompts with nodemon, you need to pass the `--no-stdin` flag for everything to work as expected.\n\n```sh\nnpx nodemon ./packages/demo/demos/password.mjs --no-stdin\n```\n\nNote that for most of you, you'll be able to use the new watch-mode built-in Node. This mode works out of the box with inquirer.\n\n```sh\n# One of depending on your need\nnode --watch script.js\nnode --watch-path=packages/ packages/demo/\n```\n\n## Wait for config\n\nMaybe some question configuration require to await a value.\n\n```js\nimport { confirm } from '@inquirer/prompts';\n\nconst answer = await confirm({ message: await getMessage() });\n```\n\n# Community prompts\n\nIf you created a cool prompt, [send us a PR adding it](https://github.com/SBoudrias/Inquirer.js/edit/main/README.md) to the list below!\n\n[**Interactive List Prompt**](https://github.com/pgibler/inquirer-interactive-list-prompt)<br/>\nSelect a choice either with arrow keys + Enter or by pressing a key associated with a choice.\n\n```\n? Choose an option:\n>   Run command (D)\n    Quit (Q)\n```\n\n[**Action Select Prompt**](https://github.com/zenithlight/inquirer-action-select)<br/>\nChoose an item from a list and choose an action to take by pressing a key.\n\n```\n? Choose a file Open <O> Edit <E> Delete <X>\n❯ image.png\n  audio.mp3\n  code.py\n```\n\n[**Table Multiple Prompt**](https://github.com/Bartheleway/inquirer-table-multiple)<br/>\nSelect multiple answer from a table display.\n\n```sh\nChoose between choices? (Press <space> to select, <Up and Down> to move rows,\n<Left and Right> to move columns)\n\n┌──────────┬───────┬───────┐\n│ 1-2 of 2 │ Yes?  │ No?   |\n├──────────┼───────┼───────┤\n│ Choice 1 │ [ ◯ ] │   ◯   |\n├──────────┼───────┼───────┤\n│ Choice 2 │   ◯   │   ◯   |\n└──────────┴───────┴───────┘\n\n```\n\n[**Toggle Prompt**](https://github.com/skarahoda/inquirer-toggle)<br/>\nConfirm with a toggle. Select a choice with arrow keys + Enter.\n\n```\n? Do you want to continue? no / yes\n```\n\n[**Sortable Checkbox Prompt**](https://github.com/th0r/inquirer-sortable-checkbox)<br/>\nThe same as built-in checkbox prompt, but also allowing to reorder choices using ctrl+up/down.\n\n```\n? Which PRs and in what order would you like to merge? (Press <space> to select, <a> to toggle all, <i> to invert selection, <ctrl+up> to move item up, <ctrl+down> to move item down, and <enter> to proceed)\n❯ ◯ PR 1\n  ◯ PR 2\n  ◯ PR 3\n```\n\n[**Multi Select Prompt**](https://github.com/jeffwcx/inquirer-select-pro)\n\nAn inquirer select that supports multiple selections and filtering/searching.\n\n```\n? Choose your OS, IDE, PL, etc. (Press <tab> to select/deselect, <backspace> to remove selected\noption, <enter> to select option)\n>>  vue\n>[ ] vue\n [ ] vuejs\n [ ] fuelphp\n [ ] venv\n [ ] vercel\n (Use arrow keys to reveal more options)\n```\n\n[**File Selector Prompt**](https://github.com/br14n-sol/inquirer-file-selector)<br/>\nA file selector, you can navigate freely between directories, choose what type of files you want to allow and it is fully customizable.\n\n```sh\n? Select a file:\n/main/path/\n├── folder1/\n├── folder2/\n├── folder3/\n├── file1.txt\n├── file2.pdf\n└── file3.jpg (not allowed)\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\nUse ↑↓ to navigate through the list\nPress <esc> to navigate to the parent directory\nPress <enter> to select a file or navigate to a directory\n```\n\n# License\n\nCopyright (c) 2023 Simon Boudrias (twitter: [@vaxilart](https://twitter.com/Vaxilart))<br/>\nLicensed under the MIT license.\n",
    "licenseText": "Copyright (c) 2023 Simon Boudrias\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@inquirer/prompts/-/prompts-7.1.0.tgz#a55ee589c0eed0ca2ee0fbc7fc63f42f4c31a24e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@inquirer/prompts/-/prompts-7.1.0.tgz",
    "hash": "a55ee589c0eed0ca2ee0fbc7fc63f42f4c31a24e",
    "integrity": "sha512-5U/XiVRH2pp1X6gpNAjWOglMf38/Ys522ncEHIKT1voRUvSj/DQnR22OVxHnwu5S+rCFaUiPQ57JOtMFQayqYA==",
    "registry": "npm",
    "packageName": "@inquirer/prompts",
    "cacheIntegrity": "sha512-5U/XiVRH2pp1X6gpNAjWOglMf38/Ys522ncEHIKT1voRUvSj/DQnR22OVxHnwu5S+rCFaUiPQ57JOtMFQayqYA== sha1-pV7licDu0Mou4PvH/GP0L0wxok4="
  },
  "registry": "npm",
  "hash": "a55ee589c0eed0ca2ee0fbc7fc63f42f4c31a24e"
}