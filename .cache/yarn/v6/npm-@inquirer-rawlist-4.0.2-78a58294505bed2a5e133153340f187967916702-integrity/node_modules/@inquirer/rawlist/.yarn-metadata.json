{
  "manifest": {
    "name": "@inquirer/rawlist",
    "version": "4.0.2",
    "description": "Inquirer rawlist prompt",
    "keywords": [
      "answer",
      "answers",
      "ask",
      "base",
      "cli",
      "command",
      "command-line",
      "confirm",
      "enquirer",
      "generate",
      "generator",
      "hyper",
      "input",
      "inquire",
      "inquirer",
      "interface",
      "iterm",
      "javascript",
      "menu",
      "node",
      "nodejs",
      "prompt",
      "promptly",
      "prompts",
      "question",
      "readline",
      "scaffold",
      "scaffolder",
      "scaffolding",
      "stdin",
      "stdout",
      "terminal",
      "tty",
      "ui",
      "yeoman",
      "yo",
      "zsh"
    ],
    "homepage": "https://github.com/SBoudrias/Inquirer.js/blob/main/packages/rawlist/README.md",
    "repository": {
      "type": "git",
      "url": "https://github.com/SBoudrias/Inquirer.js.git"
    },
    "license": "MIT",
    "author": {
      "name": "Simon Boudrias",
      "email": "admin@simonboudrias.com"
    },
    "sideEffects": false,
    "type": "module",
    "exports": {
      "./package.json": "./package.json",
      ".": {
        "import": {
          "types": "./dist/esm/index.d.ts",
          "default": "./dist/esm/index.js"
        },
        "require": {
          "types": "./dist/commonjs/index.d.ts",
          "default": "./dist/commonjs/index.js"
        }
      }
    },
    "main": "./dist/commonjs/index.js",
    "module": "./dist/esm/index.js",
    "types": "./dist/commonjs/index.d.ts",
    "files": [
      "dist"
    ],
    "scripts": {
      "attw": "attw --pack",
      "tsc": "tshy"
    },
    "dependencies": {
      "@inquirer/core": "^10.1.0",
      "@inquirer/type": "^3.0.1",
      "yoctocolors-cjs": "^2.1.2"
    },
    "devDependencies": {
      "@arethetypeswrong/cli": "^0.17.0",
      "@inquirer/testing": "^2.1.37",
      "@repo/tsconfig": "workspace:*",
      "tshy": "^3.0.2"
    },
    "engines": {
      "node": ">=18"
    },
    "publishConfig": {
      "access": "public"
    },
    "tshy": {
      "exclude": [
        "src/**/*.test.ts"
      ],
      "exports": {
        "./package.json": "./package.json",
        ".": "./src/index.ts"
      }
    },
    "peerDependencies": {
      "@types/node": ">=18"
    },
    "gitHead": "84e49bdb552e1cb4f035d644190913f367a66e74",
    "_registry": "npm",
    "_loc": "/home/runner/website-breaker2/.cache/yarn/v6/npm-@inquirer-rawlist-4.0.2-78a58294505bed2a5e133153340f187967916702-integrity/node_modules/@inquirer/rawlist/package.json",
    "readmeFilename": "README.md",
    "readme": "# `@inquirer/rawlist`\n\nSimple interactive command line prompt to display a raw list of choices (single value select) with minimal interaction.\n\n![rawlist prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/rawlist.svg)\n\n# Installation\n\n<table>\n<tr>\n  <th>npm</th>\n  <th>yarn</th>\n</tr>\n<tr>\n<td>\n\n```sh\nnpm install @inquirer/prompts\n```\n\n</td>\n<td>\n\n```sh\nyarn add @inquirer/prompts\n```\n\n</td>\n</tr>\n<tr>\n<td colSpan=\"2\" align=\"center\">Or</td>\n</tr>\n<tr>\n<td>\n\n```sh\nnpm install @inquirer/rawlist\n```\n\n</td>\n<td>\n\n```sh\nyarn add @inquirer/rawlist\n```\n\n</td>\n</tr>\n</table>\n\n# Usage\n\n```js\nimport { rawlist } from '@inquirer/prompts';\n// Or\n// import rawlist from '@inquirer/rawlist';\n\nconst answer = await rawlist({\n  message: 'Select a package manager',\n  choices: [\n    { name: 'npm', value: 'npm' },\n    { name: 'yarn', value: 'yarn' },\n    { name: 'pnpm', value: 'pnpm' },\n  ],\n});\n```\n\n## Options\n\n| Property | Type                    | Required | Description                    |\n| -------- | ----------------------- | -------- | ------------------------------ |\n| message  | `string`                | yes      | The question to ask            |\n| choices  | `Choice[]`              | yes      | List of the available choices. |\n| theme    | [See Theming](#Theming) | no       | Customize look of the prompt.  |\n\n`Separator` objects can be used in the `choices` array to render non-selectable lines in the choice list. By default it'll render a line, but you can provide the text as argument (`new Separator('-- Dependencies --')`). This option is often used to add labels to groups within long list of options.\n\n### `Choice` object\n\nThe `Choice` object is typed as\n\n```ts\ntype Choice<Value> = {\n  value: Value;\n  name?: string;\n  short?: string;\n  key?: string;\n};\n```\n\nHere's each property:\n\n- `value`: The value is what will be returned by `await rawlist()`.\n- `name`: This is the string displayed in the choice list.\n- `short`: Once the prompt is done (press enter), we'll use `short` if defined to render next to the question. By default we'll use `name`.\n- `key`: The key of the choice. Displayed as `key) name`.\n\n`choices` can also be an array of string, in which case the string will be used both as the `value` and the `name`.\n\n## Theming\n\nYou can theme a prompt by passing a `theme` object option. The theme object only need to includes the keys you wish to modify, we'll fallback on the defaults for the rest.\n\n```ts\ntype Theme = {\n  prefix: string | { idle: string; done: string };\n  spinner: {\n    interval: number;\n    frames: string[];\n  };\n  style: {\n    answer: (text: string) => string;\n    message: (text: string, status: 'idle' | 'done' | 'loading') => string;\n    error: (text: string) => string;\n    highlight: (text: string) => string;\n  };\n};\n```\n\n# License\n\nCopyright (c) 2023 Simon Boudrias (twitter: [@vaxilart](https://twitter.com/Vaxilart))<br/>\nLicensed under the MIT license.\n",
    "licenseText": "Copyright (c) 2023 Simon Boudrias\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@inquirer/rawlist/-/rawlist-4.0.2.tgz#78a58294505bed2a5e133153340f187967916702",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@inquirer/rawlist/-/rawlist-4.0.2.tgz",
    "hash": "78a58294505bed2a5e133153340f187967916702",
    "integrity": "sha512-3XGcskMoVF8H0Dl1S5TSZ3rMPPBWXRcM0VeNVsS4ByWeWjSeb0lPqfnBg6N7T0608I1B2bSVnbi2cwCrmOD1Yw==",
    "registry": "npm",
    "packageName": "@inquirer/rawlist",
    "cacheIntegrity": "sha512-3XGcskMoVF8H0Dl1S5TSZ3rMPPBWXRcM0VeNVsS4ByWeWjSeb0lPqfnBg6N7T0608I1B2bSVnbi2cwCrmOD1Yw== sha1-eKWClFBb7SpeEzFTNA8YeWeRZwI="
  },
  "registry": "npm",
  "hash": "78a58294505bed2a5e133153340f187967916702"
}